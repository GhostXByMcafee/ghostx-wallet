This file is a merged representation of the entire codebase, combined into a single document by Repomix.
The content has been processed where comments have been removed, security check has been disabled.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Code comments have been removed from supported file types
- Security check has been disabled - content may contain sensitive information
- Files are sorted by Git change count (files with more changes are at the bottom)

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.env.example
.gitignore
app.config.js
App.tsx
assets/error-animation.json
assets/success-animation.json
assets/success-fireworks-animation.json
babel.config.js
index.ts
package.json
readme.md
src/components/common/Button.tsx
src/components/common/Card.tsx
src/components/common/DebugConsole.tsx
src/components/common/Input.tsx
src/components/common/InputModal.tsx
src/components/common/Modal.tsx
src/components/common/PasswordStrengthMeter.tsx
src/components/common/ScrollContainer.tsx
src/components/common/ToggleSwitch.tsx
src/components/common/TransactionResultModal.tsx
src/config/env.ts
src/mocks/react-native-encrypted-storage.ts
src/navigation/AppNavigator.tsx
src/navigation/types.ts
src/screens/auth/BiometricSetupScreen.tsx
src/screens/auth/CreateWalletScreen.tsx
src/screens/auth/SetupSecurityScreen.tsx
src/screens/auth/SuccessScreen.tsx
src/screens/auth/WelcomeScreen.tsx
src/screens/governance/CreateProposalScreen.tsx
src/screens/governance/GovernanceScreen.tsx
src/screens/governance/ProposalDetailsScreen.tsx
src/screens/loading/LoadingScreen.tsx
src/screens/wallet/DashboardScreen.tsx
src/screens/wallet/SettingsScreen.tsx
src/screens/wallet/SwapScreen.tsx
src/screens/wallet/TokenDetailsScreen.tsx
src/services/analytics/analyticsService.ts
src/services/authentication/biometricService.ts
src/services/database/mockDatabase.ts
src/services/encryption/encryptionService.ts
src/store/useWalletStore.ts
src/types/index.ts
tsconfig.json

================================================================
Files
================================================================

================
File: .env.example
================
POSTHOG_API_KEY=phc...
POSTHOG_HOST=https://*.posthog.com

================
File: assets/error-animation.json
================
{"v":"4.6.3","fr":24,"ip":0,"op":21,"w":320,"h":320,"nm":"checklist","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 13","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":300},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":3,"ty":4,"nm":"Shape Layer 12","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":250},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":4,"ty":4,"nm":"Shape Layer 11","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":200},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":5,"ty":4,"nm":"Shape Layer 10","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":150},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":6,"ty":4,"nm":"Shape Layer 9","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":100},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":7,"ty":4,"nm":"Shape Layer 8","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":50},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":8,"ty":4,"nm":"Shape Layer 7","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":0},"p":{"a":0,"k":[160,159.5,0]},"a":{"a":0,"k":[0,-34,0]},"s":{"a":0,"k":[100,100,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p667_1_0p167_0p167","0p667_1_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":17}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.167},"n":"0p667_1_0p167_0p167","t":6,"s":[-8.142,-92.147],"e":[-7.675,-162.544],"to":[0.07779947668314,-11.7327470779419],"ti":[-0.07779947668314,11.7327470779419]},{"t":17}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.981,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"n":["0p667_1_0p167_0p167"],"t":6,"s":[20.367],"e":[6.367]},{"t":17}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":1,"k":[{"i":{"x":[0.833,0.833],"y":[0.833,0.833]},"o":{"x":[0.167,0.167],"y":[0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":6,"s":[15.021,15.021],"e":[0,0]},{"t":21}]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":17}]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":6,"s":[16.585,-99.759],"e":[28.521,-187.495],"to":[1.9892578125,-14.6227216720581],"ti":[-1.9892578125,14.6227216720581]},{"t":21}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[97.419,116],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":6,"s":[14.733],"e":[8.733]},{"t":21}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":9,"ty":4,"nm":"Shape Layer 5","parent":11,"ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":0},"p":{"a":0,"k":[0.8,-0.641,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[7.39,7.39,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-6.977,7],[6.973,-7]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-6.977,7],[6.973,-7]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":-90,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":4,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[200,200],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Combined Shape","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":7,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":10,"ty":4,"nm":"Shape Layer 6","ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":4,"s":[50],"e":[0]},{"t":14}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[160,160,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,0.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p667_1_0p333_0","0p667_1_0p333_0","0p667_0p667_0p333_0p333"],"t":4,"s":[100,100,100],"e":[1085,1085,100]},{"t":14}]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.779,19.779]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":0,"k":[0.8274509,0.1843137,0.1843137,1]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":0,"k":[-0.068,0.036],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"}],"ip":4,"op":22,"st":-23,"bm":0,"sr":1},{"ddd":0,"ind":11,"ty":4,"nm":"Shape Layer 4","ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":6,"s":[30],"e":[100]},{"t":9}]},"r":{"a":0,"k":0},"p":{"a":0,"k":[160.312,161.188,0]},"a":{"a":0,"k":[0.812,-0.562,0]},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,0.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p667_1_0p333_0","0p667_1_0p333_0","0p667_0p667_0p333_0p333"],"t":6,"s":[100,100,100],"e":[1087,1087,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,0.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p667_1_0p333_0","0p667_1_0p333_0","0p667_0p667_0p333_0p333"],"t":11,"s":[1087,1087,100],"e":[866,866,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p833_0p833_0p333_0","0p833_0p833_0p333_0","0p833_0p833_0p333_0p333"],"t":13,"s":[866,866,100],"e":[878,878,100]},{"t":16}]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[10.068,10.068]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"fl","c":{"a":0,"k":[0.8274509,0.1843137,0.1843137,1]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":0,"k":[0.784,-0.716],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"}],"ip":6,"op":22,"st":-19,"bm":0,"sr":1},{"ddd":0,"ind":12,"ty":4,"nm":"Shape Layer 3","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":0},"p":{"a":0,"k":[161,160,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,0.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p667_1_0p333_0","0p667_1_0p333_0","0p667_0p667_0p333_0p333"],"t":3,"s":[100,100,100],"e":[224,224,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,0.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0.333]},"n":["0p667_1_0p333_0","0p667_1_0p333_0","0p667_0p667_0p333_0p333"],"t":4,"s":[224,224,100],"e":[476,476,100]},{"t":8}]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[6.009,6.009]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"st","c":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":4,"s":[0.8274509,0.1843137,0.1843137,1],"e":[0.8274509,0.1843137,0.1843137,1]},{"t":8}]},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":4,"s":[0],"e":[100]},{"t":5}]},"w":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":4,"s":[3],"e":[0]},{"t":8}]},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke"},{"ty":"fl","c":{"a":0,"k":[0.8274509,0.1843137,0.1843137,1]},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":3,"s":[100],"e":[99]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":4,"s":[99],"e":[0]},{"t":5}]},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":0,"k":[-0.338,0.065],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[649.112,649.112],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 2","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"}],"ip":3,"op":22,"st":-21,"bm":0,"sr":1},{"ddd":0,"ind":13,"ty":4,"nm":"Shape Layer 2","ks":{"o":{"a":0,"k":100},"r":{"a":0,"k":0},"p":{"a":0,"k":[160.142,159.987,0]},"a":{"a":0,"k":[0,0,0]},"s":{"a":0,"k":[377.603,377.603,100]}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[22.315,22.315]},"p":{"a":0,"k":[0,0]},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse"},{"ty":"st","c":{"a":0,"k":[0.8352941,0.8352941,0.8352941,1]},"o":{"a":0,"k":100},"w":{"a":0,"k":1},"lc":1,"lj":1,"ml":4,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1]},"o":{"a":0,"k":100},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill"},{"ty":"tr","p":{"a":0,"k":[-0.038,0.003],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group"}],"ip":-21,"op":22,"st":-21,"bm":0,"sr":1}]}

================
File: assets/success-animation.json
================
{"v":"5.7.1","fr":30,"ip":0,"op":60,"w":300,"h":300,"nm":"Comp 1","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[151,151,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-22.5,-7.5],[0,0]],"o":[[0,0],[22.5,7.5],[0,0]],"v":[[61,78.5],[78,100.5],[94,115.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.431372578939,0.725720753389,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.254,"s":[0]},{"t":51,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17,"s":[0]},{"t":46.2109375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":17,"op":617,"st":17,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":203,"ix":10},"p":{"a":0,"k":[251.408,59.449,0],"ix":2},"a":{"a":0,"k":[-103.936,89.696,0],"ix":1},"s":{"a":0,"k":[91.456,89.381,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[29.459,25.084],[5,-25.75],[5.75,-0.75]],"o":[[0,0],[-25.25,-21.5],[-5.515,28.405],[-5.75,0.75]],"v":[[-75,68.75],[-107.25,86.5],[-94,84],[-128.75,113]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,0.713725490196,0.211764720842,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.254,"s":[0]},{"t":51,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17,"s":[0]},{"t":46.2109375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":17,"op":617,"st":17,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-21,347,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[20.5,4.5],[0,0],[18.25,9.25],[3.5,-3.25]],"o":[[0,0],[-20.5,-4.5],[0,0],[-18.25,-9.25],[-3.5,3.25]],"v":[[90.75,-122.25],[83.5,-110.5],[81.25,-97.25],[69.75,-93.25],[61,-75.75]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.745098039216,0.643137254902,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.254,"s":[0]},{"t":51,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17,"s":[0]},{"t":46.2109375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":17,"op":617,"st":17,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[147,146,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[109.756,101.856,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[33.75,1]],"o":[[0,0],[-33.75,-1]],"v":[[-57.75,-75.75],[-90.75,-107.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,0.431372578939,0.513725490196,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":5,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-1.5,-0.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.254,"s":[0]},{"t":51,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17,"s":[0]},{"t":46.2109375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":17,"op":617,"st":17,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"checkmark/success Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150.06,150.061,0],"ix":2},"a":{"a":0,"k":[99,99,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":0,"s":[100,100,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":12,"s":[27,27,100]},{"t":21,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.831,1.409],[0,0],[-0.622,2.004],[-1.844,1.043],[-2.083,-0.474],[-1.215,-1.74],[0,0],[-0.949,0.537],[0,0],[-2.041,-0.632],[-1.075,-1.826],[0.463,-2.047],[1.756,-1.181]],"o":[[-1.424,0.805],[0,0],[-0.93,-1.899],[0.622,-2.006],[1.844,-1.042],[2.084,0.474],[0,0],[0.553,0.939],[0,0],[1.921,-0.899],[2.042,0.631],[1.076,1.823],[-0.463,2.047],[0,0]],"v":[[-26.138,30.587],[-30.199,29.498],[-58.899,-19.189],[-59.378,-25.261],[-55.542,-30.001],[-49.433,-30.884],[-44.302,-27.441],[-23.618,7.647],[-20.911,8.371],[47.571,-30.344],[53.736,-30.76],[58.584,-26.94],[59.537,-20.918],[56.086,-15.898]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.943,103.024],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[83.631,83.631],"ix":3},"r":{"a":0,"k":-12.6,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-47.479,-12.722],[12.721,-47.478],[47.478,12.722],[-12.723,47.478]],"o":[[47.479,12.722],[-12.723,47.479],[-47.478,-12.723],[12.721,-47.479]],"v":[[23.036,-85.967],[85.969,23.035],[-23.035,85.967],[-85.966,-23.035]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0.901960790157,0.901960790157,0.901960790157,1]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[0.901960790157,0.901960790157,0.901960790157,1]},{"t":29,"s":[0.262745112181,0.823529422283,0.588235318661,1]}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[98.939,98.939],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":600,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"large-circles/success Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":42,"s":[100]},{"t":52,"s":[2]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[148,146,0],"ix":2},"a":{"a":0,"k":[95.5,98,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.009,0.009,0.333],"y":[1.621,1.621,0]},"t":17,"s":[62,62,100]},{"t":50,"s":[124,124,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-6.209,1.338],[-1.337,-6.209],[6.209,-1.337],[1.338,6.209]],"o":[[6.208,-1.337],[1.338,6.209],[-6.209,1.338],[-1.337,-6.209]],"v":[[-2.421,-11.243],[11.242,-2.422],[2.421,11.241],[-11.243,2.421]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.745000023935,0.642999985639,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[173.998,145.423],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[71,71],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-6.209,1.337],[-1.338,-6.209],[6.209,-1.338],[1.338,6.209]],"o":[[6.209,-1.338],[1.337,6.209],[-6.209,1.337],[-1.337,-6.208]],"v":[[-2.421,-11.242],[11.242,-2.422],[2.422,11.242],[-11.243,2.422]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.430999995213,0.725,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[63.997,183.011],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[70,70],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-6.209,1.337],[-1.337,-6.208],[6.209,-1.337],[1.338,6.209]],"o":[[6.209,-1.337],[1.338,6.209],[-6.209,1.338],[-1.337,-6.209]],"v":[[-2.421,-11.243],[11.242,-2.423],[2.421,11.242],[-11.243,2.421]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.713999968884,0.211999990426,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[103.291,12.83],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[70,70],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-6.208,1.337],[-1.337,-6.209],[6.209,-1.338],[1.338,6.209]],"o":[[6.209,-1.337],[1.338,6.209],[-6.209,1.337],[-1.337,-6.209]],"v":[[-2.423,-11.242],[11.241,-2.422],[2.421,11.242],[-11.243,2.422]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.430999995213,0.725,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[178.004,59.795],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[67,67],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-6.209,1.337],[-1.338,-6.208],[6.209,-1.337],[1.338,6.209]],"o":[[6.209,-1.337],[1.337,6.209],[-6.209,1.338],[-1.337,-6.209]],"v":[[-2.421,-11.243],[11.243,-2.423],[2.422,11.242],[-11.243,2.421]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.430999995213,0.513999968884,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[12.829,84.352],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[68,68],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false}],"ip":17,"op":617,"st":17,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"checkmark/success Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150.073,150.073,0],"ix":2},"a":{"a":0,"k":[99,99,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.203,0.203,0.667],"y":[0.507,0.507,1]},"o":{"x":[0.915,0.915,0.333],"y":[0.651,0.651,0]},"t":50,"s":[93.357,93.357,100]},{"t":59,"s":[121.357,121.357,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.831,1.409],[0,0],[-0.622,2.004],[-1.844,1.043],[-2.083,-0.474],[-1.215,-1.74],[0,0],[-0.949,0.537],[0,0],[-2.041,-0.632],[-1.075,-1.826],[0.463,-2.047],[1.756,-1.181]],"o":[[-1.424,0.805],[0,0],[-0.93,-1.899],[0.622,-2.006],[1.844,-1.042],[2.084,0.474],[0,0],[0.553,0.939],[0,0],[1.921,-0.899],[2.042,0.631],[1.076,1.823],[-0.463,2.047],[0,0]],"v":[[-26.138,30.587],[-30.199,29.498],[-58.899,-19.189],[-59.378,-25.261],[-55.542,-30.001],[-49.433,-30.884],[-44.302,-27.441],[-23.618,7.647],[-20.911,8.371],[47.571,-30.344],[53.736,-30.76],[58.584,-26.94],[59.537,-20.918],[56.086,-15.898]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[98.943,102.024],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-47.479,-12.722],[12.721,-47.478],[47.478,12.722],[-12.723,47.478]],"o":[[47.479,12.722],[-12.723,47.479],[-47.478,-12.723],[12.721,-47.479]],"v":[[23.036,-85.967],[85.969,23.035],[-23.035,85.967],[-85.966,-23.035]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.452748945648,0.901960784314,0.712987563189,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[98.939,98.939],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":50,"op":650,"st":50,"bm":0}],"markers":[]}

================
File: assets/success-fireworks-animation.json
================
{"v":"5.5.7","meta":{"g":"LottieFiles AE 0.1.14","a":"","k":"","d":"","tc":""},"fr":60,"ip":0,"op":100,"w":300,"h":300,"nm":"Comp 1","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":0,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":4.615,"s":[39.5]},{"t":30,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0}]},{"id":"comp_1","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":0,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":4.615,"s":[39.5]},{"t":30,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":0,"s":[0]},{"t":30,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0}]},{"id":"comp_2","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":29,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":33.77,"s":[39.5]},{"t":60,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"start","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[37,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.729],"y":[0.926]},"o":{"x":[0.816],"y":[0.166]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[1.011]},"o":{"x":[0.032],"y":[0.035]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0}]},{"id":"comp_3","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":29,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":33.77,"s":[39.5]},{"t":60,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"start","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[37,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.729],"y":[0.926]},"o":{"x":[0.816],"y":[0.166]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[1.011]},"o":{"x":[0.032],"y":[0.035]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0}]},{"id":"comp_4","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":29,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":33.77,"s":[39.5]},{"t":60,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"start","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":130,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[37,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.729],"y":[0.926]},"o":{"x":[0.816],"y":[0.166]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[1.011]},"o":{"x":[0.032],"y":[0.035]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568627451,0,0.552941176471,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0}]},{"id":"comp_5","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":29,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":33.77,"s":[39.5]},{"t":60,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"start","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":117,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[37,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.729],"y":[0.926]},"o":{"x":[0.816],"y":[0.166]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[1.011]},"o":{"x":[0.032],"y":[0.035]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0}]},{"id":"comp_6","layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":0,"k":48,"ix":3},"y":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.191],"y":[0.12]},"t":29,"s":[49.5]},{"i":{"x":[0.829],"y":[0.938]},"o":{"x":[0.436],"y":[0]},"t":33.77,"s":[39.5]},{"t":60,"s":[49.5]}],"ix":4}},"a":{"a":0,"k":[-12.5,-0.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"start","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":77,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[37,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.729],"y":[0.926]},"o":{"x":[0.816],"y":[0.166]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[1.011]},"o":{"x":[0.032],"y":[0.035]},"t":0,"s":[100]},{"t":30,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":100,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"single 12","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":330,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"single 11","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":300,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"single 10","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":270,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"single 9","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":240,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"single 8","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":210,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"single 7","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"single 6","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":150,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"single 5","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":120,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"single 4","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"single 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":60,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"single 2","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":30,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"single","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-12.5,-0.5,0],"ix":2},"a":{"a":0,"k":[-10.75,24.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-10.75,24.5],[13.25,24.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.458823529412,0.921568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.927],"y":[0.978]},"o":{"x":[0.333],"y":[0]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.531],"y":[0.993]},"o":{"x":[0.03],"y":[0.073]},"t":29,"s":[0]},{"t":60,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":29,"op":129,"st":29,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"06","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[101.5,137,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":69,"op":169,"st":69,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"07","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[201,181.5,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":72,"op":172,"st":72,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"07","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[179.5,108,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":67,"op":167,"st":67,"bm":0},{"ddd":0,"ind":4,"ty":0,"nm":"06","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[154.5,157.5,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":65,"op":165,"st":65,"bm":0},{"ddd":0,"ind":5,"ty":0,"nm":"07","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[84,166,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":60,"op":160,"st":60,"bm":0},{"ddd":0,"ind":6,"ty":0,"nm":"06","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[230,173,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":52,"op":152,"st":52,"bm":0},{"ddd":0,"ind":7,"ty":0,"nm":"06","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[122.5,99,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":47,"op":147,"st":47,"bm":0},{"ddd":0,"ind":8,"ty":0,"nm":"02","refId":"comp_2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[58,167.5,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":10,"op":110,"st":10,"bm":0},{"ddd":0,"ind":9,"ty":0,"nm":"01","refId":"comp_3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[149,190,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":19,"op":119,"st":19,"bm":0},{"ddd":0,"ind":10,"ty":0,"nm":"03","refId":"comp_4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[258.5,175,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":5,"op":105,"st":5,"bm":0},{"ddd":0,"ind":11,"ty":0,"nm":"04","refId":"comp_5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[204,125,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":15,"op":115,"st":15,"bm":0},{"ddd":0,"ind":12,"ty":0,"nm":"05","refId":"comp_6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[109,125,0],"ix":2},"a":{"a":0,"k":[50,50,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":100,"h":100,"ip":0,"op":100,"st":0,"bm":0}],"markers":[]}

================
File: readme.md
================
# ghostEX Wallet

![ghostEX Wallet](./assets/splash.png)

A secure and private wallet for your digital assets.

**ghostEX Wallet** is a mobile application that provides a secure, private, and user-friendly way to manage your digital assets. With built-in governance features, total security, and full control over your assets, **ghostEX** gives you everything you need in a modern crypto wallet.

---

## Features

### Total Security

- Your keys never leave your device
- Optional biometric authentication
- Secure encryption for all sensitive data
- No third-party access to your wallet information

### Full Control

- Manage your tokens without intermediaries
- Clear overview of all your assets
- Track token values and portfolio performance
- Simple and intuitive interface for all operations

### Governance

- Participate in network decisions with your tokens
- View and vote on active proposals
- Create new proposals for the community
- Track voting history and proposal outcomes

---

## Getting Started

### Download

Download the latest version of **ghostEX Wallet APK** from our official website: [ghostx.tech](https://ghostx.tech)

### Installation

1. Enable "Install from Unknown Sources" in your Android settings.
2. Open the downloaded APK file.
3. Follow the installation instructions.

### Creating Your Wallet

1. Launch the app.
2. Tap **"Create Wallet"**.
3. Follow the wallet creation process.
4. Securely store your recovery information.
5. Optionally enable biometric authentication for enhanced security.

---

## Usage Guide

### Managing Assets

- **View your total balance** on the Dashboard.
- **Check individual token details** by tapping on any asset.
- **Receive tokens** by sharing your public address.
- **Send tokens** using the transfer feature.

### Participating in Governance

- Browse active proposals in the **Governance tab**.
- View detailed information about any proposal.
- Cast your vote (**For/Against**) on active proposals.
- Create new proposals if you meet the token requirements.

### Security Settings

- Manage biometric authentication.
- Update your wallet password.
- View session history.
- Configure privacy preferences.

---

## Privacy & Security

**ghostEX Wallet** prioritizes your privacy and security:

- No collection of personal data.
- All sensitive information is encrypted locally.
- Private keys never leave your device.
- No tracking or profiling of your activity.
- Optional analytics can be disabled at any time.

---

## In Action

[![ghostEX Wallet in Action](./assets/ghostex-preview.png)](https://youtu.be/)

---

## Support

For support, questions, or feedback, please contact:

- **Email**: [support@ghostx.tech](mailto:support@ghostx.tech)
- **Twitter**: [@ghostEX_____](https://twitter.com/ghostEX_____)

---

## Disclaimer

While we strive to ensure maximum security, please practice good security habits and **never share your recovery phrase or private keys with anyone**.

================
File: src/components/common/InputModal.tsx
================
import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  Modal,
  StyleSheet,
  TouchableOpacity,
  TextInput,
  Dimensions,
  KeyboardAvoidingView,
  Platform
} from 'react-native';

interface InputModalProps {
  visible: boolean;
  onClose: () => void;
  onSubmit: (value: string) => void;
  title: string;
  initialValue: string;
  placeholder?: string;
  keyboardType?: 'default' | 'numeric' | 'email-address' | 'phone-pad';
}

const InputModal: React.FC<InputModalProps> = ({
  visible,
  onClose,
  onSubmit,
  title,
  initialValue,
  placeholder = '',
  keyboardType = 'numeric'
}) => {
  const [value, setValue] = useState(initialValue);

  useEffect(() => {
    if (visible) {
      setValue(initialValue);
    }
  }, [visible, initialValue]);

  const handleSubmit = () => {
    onSubmit(value);
    onClose();
  };

  return (
    <Modal
      transparent
      visible={visible}
      animationType="fade"
      onRequestClose={onClose}
    >
      <KeyboardAvoidingView
        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
        style={styles.container}
      >
        <View style={styles.modalContainer}>
          <Text style={styles.title}>{title}</Text>

          <TextInput
            style={styles.input}
            value={value}
            onChangeText={setValue}
            placeholder={placeholder}
            placeholderTextColor="#666666"
            keyboardType={keyboardType}
            autoFocus={true}
            selectTextOnFocus={true}
          />

          <View style={styles.buttonContainer}>
            <TouchableOpacity
              style={[styles.button, styles.cancelButton]}
              onPress={onClose}
            >
              <Text style={styles.buttonText}>Cancel</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={[styles.button, styles.confirmButton]}
              onPress={handleSubmit}
            >
              <Text style={styles.buttonText}>Confirm</Text>
            </TouchableOpacity>
          </View>
        </View>
      </KeyboardAvoidingView>
    </Modal>
  );
};

const { width } = Dimensions.get('window');

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
  },
  modalContainer: {
    width: width * 0.85,
    backgroundColor: '#1E1E1E',
    borderRadius: 20,
    padding: 24,
    alignItems: 'center',
    elevation: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    borderWidth: 1,
    borderColor: '#333333',
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
  },
  input: {
    backgroundColor: '#2A2A2A',
    width: '100%',
    padding: 12,
    borderRadius: 8,
    color: '#FFFFFF',
    fontSize: 16,
    marginBottom: 16,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: '100%',
  },
  button: {
    flex: 1,
    paddingVertical: 12,
    borderRadius: 8,
    alignItems: 'center',
    justifyContent: 'center',
    marginHorizontal: 4,
  },
  cancelButton: {
    backgroundColor: '#444444',
  },
  confirmButton: {
    backgroundColor: '#3366FF',
  },
  buttonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  }
});

export default InputModal;

================
File: src/components/common/Modal.tsx
================
import React from 'react';
import { Modal as RNModal, StyleSheet, Text, View } from 'react-native';
import Button from './Button';

interface ModalAction {
  text: string;
  variant?: 'primary' | 'outline' | 'secondary';
  onPress: () => void;
}

interface ModalProps {
  visible: boolean;
  onClose: () => void;
  title: string;
  description: string;
  actions: ModalAction[];
}

const Modal: React.FC<ModalProps> = ({
  visible,
  onClose,
  title,
  description,
  actions,
}) => {
  return (
    <RNModal
      visible={visible}
      transparent
      animationType="fade"
      onRequestClose={onClose}
    >
      <View style={styles.overlay}>
        <View style={styles.content}>
          <Text style={styles.title}>{title}</Text>
          <Text style={styles.description}>{description}</Text>

          <View style={styles.actions}>
            {actions.map((action, index) => (
              <Button
                key={index}
                title={action.text}
                variant={action.variant || 'primary'}
                onPress={action.onPress}
                style={[
                  styles.actionButton,
                  index > 0 && styles.actionButtonMargin
                ]}
              />
            ))}
          </View>
        </View>
      </View>
    </RNModal>
  );
};

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
    justifyContent: 'center',
    alignItems: 'center',
  },
  content: {
    backgroundColor: '#1E1E1E',
    borderRadius: 12,
    padding: 24,
    width: '80%',
    maxWidth: 400,
    borderWidth: 1,
    borderColor: '#333333',
  },
  title: {
    fontSize: 20,
    fontWeight: '600',
    marginBottom: 12,
    color: '#FFFFFF',
  },
  description: {
    fontSize: 16,
    color: '#BBBBBB',
    marginBottom: 24,
  },
  actions: {
    flexDirection: 'row',
    justifyContent: 'flex-end',
  },
  actionButton: {
    minWidth: 100,
  },
  actionButtonMargin: {
    marginLeft: 12,
  },
});

export default Modal;

================
File: src/components/common/PasswordStrengthMeter.tsx
================
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

interface Props {
  password: string;
}

const PasswordStrengthMeter: React.FC<Props> = ({ password }) => {
  const calculateStrength = (pass: string): number => {
    let strength = 0;
    if (pass.length >= 8) strength += 1;
    if (/[A-Z]/.test(pass)) strength += 1;
    if (/[0-9]/.test(pass)) strength += 1;
    if (/[^A-Za-z0-9]/.test(pass)) strength += 1;
    return strength;
  };

  const getStrengthText = (strength: number): string => {
    switch (strength) {
      case 0: return 'Very weak';
      case 1: return 'Weak';
      case 2: return 'Medium';
      case 3: return 'Strong';
      case 4: return 'Very strong';
      default: return '';
    }
  };

  const getStrengthColor = (strength: number): string => {
    switch (strength) {
      case 0: return '#FF4444';
      case 1: return '#FFA500';
      case 2: return '#FFD700';
      case 3: return '#90EE90';
      case 4: return '#00FF00';
      default: return '#CCCCCC';
    }
  };

  const strength = calculateStrength(password);

  return (
    <View style={styles.container}>
      <View style={styles.meterContainer}>
        {[...Array(4)].map((_, index) => (
          <View
            key={index}
            style={[
              styles.meterSegment,
              { backgroundColor: index < strength ? getStrengthColor(strength) : '#333333' }
            ]}
          />
        ))}
      </View>
      <Text style={[styles.strengthText, { color: getStrengthColor(strength) }]}>
        {getStrengthText(strength)}
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    marginTop: 8,
  },
  meterContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 4,
  },
  meterSegment: {
    flex: 1,
    height: 4,
    marginHorizontal: 2,
    borderRadius: 2,
  },
  strengthText: {
    fontSize: 12,
    textAlign: 'right',
  },
});

export default PasswordStrengthMeter;

================
File: src/components/common/TransactionResultModal.tsx
================
import React from 'react';
import {
  View,
  Text,
  Modal,
  StyleSheet,
  TouchableOpacity,
  Animated,
  Dimensions
} from 'react-native';
import LottieView from 'lottie-react-native';

interface TransactionResultModalProps {
  visible: boolean;
  onClose: () => void;
  success: boolean;
  title: string;
  message: string;
  details?: string;
}

const TransactionResultModal: React.FC<TransactionResultModalProps> = ({
  visible,
  onClose,
  success,
  title,
  message,
  details
}) => {
  const [animation] = React.useState(new Animated.Value(0));
  const lottieRef = React.useRef<LottieView>(null);

  React.useEffect(() => {
    if (visible) {
      Animated.spring(animation, {
        toValue: 1,
        useNativeDriver: true,
        tension: 50,
        friction: 7
      }).start();

      if (lottieRef.current) {
        lottieRef.current.play();
      }
    } else {
      Animated.timing(animation, {
        toValue: 0,
        duration: 200,
        useNativeDriver: true
      }).start();
    }
  }, [visible]);

  const translateY = animation.interpolate({
    inputRange: [0, 1],
    outputRange: [600, 0]
  });

  const opacity = animation.interpolate({
    inputRange: [0, 1],
    outputRange: [0, 1]
  });

  return (
    <Modal
      transparent
      visible={visible}
      animationType="none"
      onRequestClose={onClose}
    >
      <View style={styles.container}>
        <Animated.View
          style={[
            styles.modalContainer,
            { transform: [{ translateY }], opacity }
          ]}
        >
          <View style={styles.header}>
            <View style={styles.animation}>
              {success ? (
                <LottieView
                  ref={lottieRef}
                  source={require('../../../assets/success-animation.json')}
                  style={styles.animationView}
                  autoPlay
                  loop={false}
                />
              ) : (
                <LottieView
                  ref={lottieRef}
                  source={require('../../../assets/error-animation.json')}
                  style={styles.animationView}
                  autoPlay
                  loop={false}
                />
              )}
            </View>

            <Text style={styles.title}>{title}</Text>
            <Text style={styles.message}>{message}</Text>

            {details && (
              <View style={styles.detailsContainer}>
                <Text style={styles.detailsTitle}>Details:</Text>
                <Text style={styles.detailsText}>{details}</Text>
              </View>
            )}
          </View>

          <TouchableOpacity
            style={[
              styles.button,
              success ? styles.successButton : styles.errorButton
            ]}
            onPress={onClose}
          >
            <Text style={styles.buttonText}>
              {success ? 'Great!' : 'Try again'}
            </Text>
          </TouchableOpacity>
        </Animated.View>
      </View>
    </Modal>
  );
};

const { width } = Dimensions.get('window');

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
  },
  modalContainer: {
    width: width * 0.85,
    backgroundColor: '#1E1E1E',
    borderRadius: 20,
    padding: 24,
    alignItems: 'center',
    elevation: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    borderWidth: 1,
    borderColor: '#333333',
  },
  header: {
    alignItems: 'center',
    marginBottom: 20,
    width: '100%',
  },
  animation: {
    height: 120,
    justifyContent: 'center',
    alignItems: 'center',
    marginVertical: 16,
  },
  animationView: {
    width: 120,
    height: 120,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 8,
  },
  message: {
    fontSize: 16,
    color: '#CCCCCC',
    textAlign: 'center',
    marginBottom: 16,
  },
  detailsContainer: {
    backgroundColor: '#2A2A2A',
    padding: 12,
    borderRadius: 8,
    width: '100%',
    marginBottom: 16,
  },
  detailsTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#AAAAAA',
    marginBottom: 4,
  },
  detailsText: {
    fontSize: 14,
    color: '#DDDDDD',
  },
  button: {
    width: '100%',
    paddingVertical: 14,
    borderRadius: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  successButton: {
    backgroundColor: '#28A745',
  },
  errorButton: {
    backgroundColor: '#DC3545',
  },
  buttonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default TransactionResultModal;

================
File: src/screens/wallet/SwapScreen.tsx
================
import React, { useEffect, useState } from 'react';
import {
  ActivityIndicator,
  Image,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View
} from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import InputModal from '../../components/common/InputModal';
import TransactionResultModal from '../../components/common/TransactionResultModal';
import analyticsService from '../../services/analytics/analyticsService';
import useWalletStore from '../../store/useWalletStore';

const SwapScreen: React.FC = () => {
  const { tokens } = useWalletStore();
  const [fromToken, setFromToken] = useState<string | null>(null);
  const [toToken, setToToken] = useState<string | null>(null);
  const [amount, setAmount] = useState('0.0');
  const [estimatedAmount, setEstimatedAmount] = useState('0.0');
  const [isCalculating, setIsCalculating] = useState(false);
  const [exchangeRate, setExchangeRate] = useState(0);
  const [slippage, setSlippage] = useState(0.5);

  const [modalVisible, setModalVisible] = useState(false);
  const [modalSuccess, setModalSuccess] = useState(true);
  const [modalTitle, setModalTitle] = useState('');
  const [modalMessage, setModalMessage] = useState('');
  const [modalDetails, setModalDetails] = useState('');

  const [inputModalVisible, setInputModalVisible] = useState(false);

  const selectedFromToken = tokens.find(t => t.id === fromToken);
  const selectedToToken = tokens.find(t => t.id === toToken);

  useEffect(() => {
    analyticsService.trackScreen('SwapScreen');

    if (tokens.length > 0 && !fromToken) {
      setFromToken(tokens[0].id);
    }

    if (tokens.length > 1 && !toToken) {
      setToToken(tokens[1].id);
    }
  }, [tokens]);

  useEffect(() => {
    if (fromToken && toToken) {
      calculateSwapRate();
    }
  }, [fromToken, toToken]);

  const calculateSwapRate = async () => {
    if (!fromToken || !toToken) return;

    setIsCalculating(true);

    try {
      await new Promise(resolve => setTimeout(resolve, 1000));

      const mockRate = 0.5 + Math.random() * 1.5;
      setExchangeRate(parseFloat(mockRate.toFixed(4)));

      if (amount && parseFloat(amount) > 0) {
        const estimated = parseFloat(amount) * mockRate;
        setEstimatedAmount(estimated.toFixed(6));
      }
    } catch (error) {
      console.error('Error calculating swap rate:', error);
    } finally {
      setIsCalculating(false);
    }
  };

  const handleAmountChange = (value: string) => {
    if (/^\d*\.?\d*$/.test(value) || value === '') {
      setAmount(value);

      if (exchangeRate > 0 && value && parseFloat(value) > 0) {
        const estimated = parseFloat(value) * exchangeRate;
        setEstimatedAmount(estimated.toFixed(6));
      } else {
        setEstimatedAmount('0.0');
      }
    }
  };

  const handleAmountPress = () => {
    setInputModalVisible(true);
  };

  const handleAmountSubmit = (value: string) => {
    handleAmountChange(value);
  };

  const handleSwapTokens = () => {
    const tempFrom = fromToken;
    setFromToken(toToken);
    setToToken(tempFrom);

    setAmount(estimatedAmount);

    analyticsService.trackEvent({
      name: 'swap_tokens_flipped',
    });
  };

  const handleExecuteSwap = async () => {
    if (!fromToken || !toToken || !amount || parseFloat(amount) <= 0) return;

    analyticsService.trackEvent({
      name: 'swap_executed',
      properties: {
        fromToken: selectedFromToken?.symbol,
        toToken: selectedToToken?.symbol,
        amount: parseFloat(amount),
        slippage
      }
    });

    try {
      const randomSuccess = Math.random() < 0.8;

      await new Promise(resolve => setTimeout(resolve, 1500));

      if (randomSuccess) {
        setModalSuccess(true);
        setModalTitle('Success');
        setModalMessage(`You have swapped ${amount} ${selectedFromToken?.symbol} for approximately ${estimatedAmount} ${selectedToToken?.symbol}.`);
        setModalDetails(`Exchange rate: 1 ${selectedFromToken?.symbol} = ${exchangeRate.toFixed(6)} ${selectedToToken?.symbol}\nSlippage: ${slippage}%`);
      } else {
        const errorTypes = [
          "Insufficient liquidity",
          "High price impact",
          "Exceeds slippage limit",
          "Blockchain error"
        ];
        const randomError = errorTypes[Math.floor(Math.random() * errorTypes.length)];

        setModalSuccess(false);
        setModalTitle('Swap Failed');
        setModalMessage(`The swap could not be completed due to: ${randomError}.`);
        setModalDetails(`Try with a smaller amount or adjust the slippage. If the problem persists, try again later.`);
      }

      setModalVisible(true);

    } catch (error) {
      setModalSuccess(false);
      setModalTitle('Unexpected Error');
      setModalMessage('An unexpected error occurred while processing your transaction.');
      setModalDetails(`Technical details: ${error}`);
      setModalVisible(true);
    }
  };

  const handleCloseModal = () => {
    setModalVisible(false);

    if (modalSuccess) {
      setAmount('0.0');
      setEstimatedAmount('0.0');
    }
  };

  const renderTokenSelector = (
    title: string,
    selectedToken: string | null,
    onSelect: (id: string) => void
  ) => (
    <View style={styles.tokenSelector}>
      <Text style={styles.selectorTitle}>{title}</Text>
      <ScrollView
        horizontal
        showsHorizontalScrollIndicator={false}
        style={styles.tokenList}
      >
        {tokens.map(token => (
          <TouchableOpacity
            key={token.id}
            style={[
              styles.tokenItem,
              selectedToken === token.id && styles.selectedTokenItem
            ]}
            onPress={() => onSelect(token.id)}
          >
            {token.iconUrl ? (
              <Image
                source={token.iconUrl}
                style={styles.tokenIcon}
              />
            ) : (
              <View style={[styles.tokenIcon, styles.placeholderIcon]}>
                <Text style={styles.tokenIconText}>{token.symbol.charAt(0)}</Text>
              </View>
            )}
            <Text
              style={[
                styles.tokenSymbol,
                selectedToken === token.id && styles.selectedTokenSymbol
              ]}
            >
              {token.symbol}
            </Text>
            <Text style={styles.tokenBalance}>
              {`${token.balance}`}
            </Text>
          </TouchableOpacity>
        ))}
      </ScrollView>
    </View>
  );

  return (
    <ScrollView style={styles.container}>
      <View style={styles.content}>
        <Text style={styles.title}>Swap Tokens</Text>
        <Text style={styles.subtitle}>
          Trade your tokens easily and privately
        </Text>

        <Card style={styles.swapCard}>
          {renderTokenSelector('What I have', fromToken, setFromToken)}

          {fromToken && (
            <View style={styles.amountContainer}>
              <Text style={styles.amountLabel}>Amount</Text>
              <TouchableOpacity style={styles.maxButton} onPress={() => {
                const maxAmount = selectedFromToken?.balance || '0';
                handleAmountChange(maxAmount);
              }}>
                <Text style={styles.maxButtonText}>MAX</Text>
              </TouchableOpacity>
              <TouchableOpacity
                style={styles.amountInput}
                onPress={handleAmountPress}
              >
                <Text style={styles.amountText}>{amount}</Text>
              </TouchableOpacity>
            </View>
          )}

          <TouchableOpacity
            style={styles.swapButton}
            onPress={handleSwapTokens}
          >
            <Text style={styles.swapButtonText}>↑↓</Text>
          </TouchableOpacity>

          {renderTokenSelector('What I want', toToken, setToToken)}

          {toToken && (
            <View style={styles.estimatedContainer}>
              <Text style={styles.estimatedLabel}>
                You will receive approximately:
              </Text>
              <View style={styles.estimatedRow}>
                {isCalculating ? (
                  <ActivityIndicator size="small" color="#3366FF" />
                ) : (
                  <Text style={styles.estimatedAmount}>
                    {estimatedAmount} {selectedToToken?.symbol}
                  </Text>
                )}
              </View>

              <View style={styles.rateContainer}>
                <Text style={styles.rateLabel}>Exchange rate:</Text>
                {isCalculating ? (
                  <ActivityIndicator size="small" color="#3366FF" />
                ) : (
                  <Text style={styles.rateValue}>
                    1 {selectedFromToken?.symbol} = {exchangeRate} {selectedToToken?.symbol}
                  </Text>
                )}
              </View>

              <View style={styles.slippageContainer}>
                <Text style={styles.slippageLabel}>Slippage:</Text>
                <View style={styles.slippageOptions}>
                  {[0.5, 1.0, 2.0].map(value => (
                    <TouchableOpacity
                      key={value}
                      style={[
                        styles.slippageOption,
                        slippage === value && styles.slippageOptionSelected
                      ]}
                      onPress={() => setSlippage(value)}
                    >
                      <Text style={[
                        styles.slippageOptionText,
                        slippage === value && styles.slippageOptionTextSelected
                      ]}>
                        {value}%
                      </Text>
                    </TouchableOpacity>
                  ))}
                </View>
              </View>
            </View>
          )}

          <Button
            title="Swap now"
            onPress={handleExecuteSwap}
            disabled={
              !fromToken ||
              !toToken ||
              parseFloat(amount) <= 0 ||
              isCalculating
            }
          />

          <Text style={styles.disclaimer}>
            The prices shown are approximate and may vary. The actual transaction could differ based on market conditions.
          </Text>
        </Card>

        <TransactionResultModal
          visible={modalVisible}
          onClose={handleCloseModal}
          success={modalSuccess}
          title={modalTitle}
          message={modalMessage}
          details={modalDetails}
        />

        <InputModal
          visible={inputModalVisible}
          onClose={() => setInputModalVisible(false)}
          onSubmit={handleAmountSubmit}
          title="Enter the amount"
          initialValue={amount === '0.0' ? '' : amount}
          placeholder="Amount"
          keyboardType="numeric"
        />
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  content: {
    padding: 16,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: '#AAAAAA',
    marginBottom: 24,
  },
  swapCard: {
    padding: 16,
    marginBottom: 16,
    backgroundColor: '#1E1E1E',
  },
  tokenSelector: {
    marginBottom: 16,
  },
  selectorTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 8,
  },
  tokenList: {
    flexDirection: 'row',
    marginBottom: 8,
  },
  tokenItem: {
    padding: 10,
    backgroundColor: '#2A2A2A',
    borderRadius: 12,
    marginRight: 8,
    alignItems: 'center',
    minWidth: 80,
  },
  selectedTokenItem: {
    backgroundColor: '#2C4D8E',
  },
  tokenIcon: {
    width: 32,
    height: 32,
    borderRadius: 16,
    marginRight: 8,
  },
  placeholderIcon: {
    backgroundColor: '#444444',
    justifyContent: 'center',
    alignItems: 'center',
  },
  tokenIconText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  tokenSymbol: {
    color: '#FFFFFF',
    fontWeight: 'bold',
    fontSize: 14,
  },
  selectedTokenSymbol: {
    color: '#FFFFFF',
  },
  tokenBalance: {
    color: '#AAAAAA',
    fontSize: 12,
  },
  amountContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 24,
    borderBottomWidth: 1,
    borderBottomColor: '#333333',
    paddingBottom: 8,
  },
  amountLabel: {
    color: '#FFFFFF',
    fontSize: 16,
    marginRight: 8,
  },
  maxButton: {
    backgroundColor: '#3366FF',
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 4,
    marginRight: 8,
  },
  maxButtonText: {
    color: '#FFFFFF',
    fontSize: 12,
    fontWeight: 'bold',
  },
  amountInput: {
    flex: 1,
    paddingVertical: 8,
    paddingHorizontal: 12,
    backgroundColor: '#2A2A2A',
    borderRadius: 8,
    marginLeft: 8,
    justifyContent: 'center'
  },
  amountText: {
    fontSize: 18,
    color: '#FFFFFF',
    fontWeight: '500'
  },
  swapButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: '#3366FF',
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: 'center',
    marginVertical: 16,
  },
  swapButtonText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
  estimatedContainer: {
    marginBottom: 24,
    padding: 16,
    backgroundColor: '#2A2A2A',
    borderRadius: 12,
  },
  estimatedLabel: {
    color: '#AAAAAA',
    fontSize: 14,
    marginBottom: 8,
  },
  estimatedRow: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  estimatedAmount: {
    color: '#FFFFFF',
    fontSize: 20,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  rateContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 16,
    paddingTop: 16,
    borderTopWidth: 1,
    borderTopColor: '#333333',
  },
  rateLabel: {
    color: '#AAAAAA',
    fontSize: 14,
  },
  rateValue: {
    color: '#FFFFFF',
    fontSize: 14,
  },
  slippageContainer: {
    marginTop: 16,
    paddingTop: 16,
    borderTopWidth: 1,
    borderTopColor: '#333333',
  },
  slippageLabel: {
    color: '#AAAAAA',
    fontSize: 14,
    marginBottom: 8,
  },
  slippageOptions: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  slippageOption: {
    paddingVertical: 6,
    paddingHorizontal: 12,
    borderRadius: 8,
    backgroundColor: '#222222',
  },
  slippageOptionSelected: {
    backgroundColor: '#3366FF',
  },
  slippageOptionText: {
    color: '#AAAAAA',
    fontSize: 14,
  },
  slippageOptionTextSelected: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  disclaimer: {
    color: '#888888',
    fontSize: 12,
    textAlign: 'center',
    marginTop: 16,
    fontStyle: 'italic',
  },
  tokenIconPlaceholder: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#3366FF',
    marginRight: 8,
  },
});

export default SwapScreen;

================
File: src/types/index.ts
================
import { ImageSourcePropType } from "react-native";

export interface TokenBalance {
  id: string;
  symbol: string;
  name: string;
  balance: string;
  decimals: number;
  iconUrl: ImageSourcePropType;
}

export interface Proposal {
  id: string;
  title: string;
  description: string;
  creator: string;
  startDate: string;
  endDate: string;
  status: 'active' | 'passed' | 'rejected' | 'pending';
  votesFor: number;
  votesAgainst: number;
  executed: boolean;
  createdAt: string;
}

export interface Vote {
  proposalId: string;
  voter: string;
  support: boolean;
  voteWeight: number;
  timestamp: string;
  id: string;
}

export interface InputProps {
  label?: string;
  error?: string;
  isPassword?: boolean;
  containerStyle?: any;
  labelStyle?: any;
  inputStyle?: any;
  errorStyle?: any;
  [key: string]: any;
}

export interface ToggleSwitchProps {
  value: boolean;
  onValueChange: (value: boolean) => void;
  disabled?: boolean;
  label?: string;
  containerStyle?: any;
  labelStyle?: any;
}

export interface CardProps {
  children: React.ReactNode;
  title?: string;
  style?: any;
  titleStyle?: any;
  contentStyle?: any;
  onPress?: () => void;
}

================
File: .gitignore
================
# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files

# dependencies
node_modules/

# Expo
.expo/
dist/
web-build/
expo-env.d.ts

# Native
*.orig.*
*.jks
*.p8
*.p12
*.key
*.mobileprovision

# Metro
.metro-health-check*

# debug
npm-debug.*
yarn-debug.*
yarn-error.*

# macOS
.DS_Store
*.pem

# local env files
.env

# typescript
*.tsbuildinfo

# vscode settings
/.vscode

================
File: app.config.js
================
import 'dotenv/config';

export default {
  "expo": {
    "name": "GhostEx Wallet",
    "slug": "ghostex-wallet",
    "version": "1.0.0",
    "orientation": "portrait",
    "icon": "./assets/icon.png",
    "userInterfaceStyle": "dark",
    "splash": {
      "image": "./assets/splash.png",
      "resizeMode": "contain",
      "backgroundColor": "#121212"
    },
    "updates": {
      "fallbackToCacheTimeout": 0
    },
    "assetBundlePatterns": [
      "**/*"
    ],
    "ios": {
      "supportsTablet": true,
      "infoPlist": {
        "NSFaceIDUsageDescription": "This application uses Face ID/Touch ID to protect your digital wallet"
      }
    },
    "android": {
      "adaptiveIcon": {
        "foregroundImage": "./assets/adaptive-icon.png",
        "backgroundColor": "#121212"
      },
      "permissions": [
        "USE_BIOMETRIC",
        "USE_FINGERPRINT"
      ],
      "package": "com.ghostex.wallet"
    },
    "web": {
      "favicon": "./assets/favicon.png"
    },
    "plugins": [
      "expo-secure-store",
      "expo-local-authentication",
      "expo-localization"
    ],
    "extra": {
      "posthogApiKey": process.env.POSTHOG_API_KEY,
      "posthogHost": process.env.POSTHOG_HOST,
      "eas": {
        "projectId": "eas-project-id"
      }
    },
    "experiments": {
      "newArchEnabled": true
    }
  }
}

================
File: App.tsx
================
import React, { useEffect } from 'react';
import { StyleSheet } from 'react-native';
import { GestureHandlerRootView } from 'react-native-gesture-handler';
import { StatusBar } from 'expo-status-bar';
import * as SplashScreen from 'expo-splash-screen';
import { PostHogProvider } from 'posthog-react-native';
import { NavigationContainer } from '@react-navigation/native';
import AppNavigator from './src/navigation/AppNavigator';
import ENV from './src/config/env';

SplashScreen.preventAutoHideAsync();

const App: React.FC = () => {
  useEffect(() => {
    const initializeApp = async () => {
      try {
        await SplashScreen.hideAsync();
      } catch (error) {
        console.error('Error initializing app:', error);
        await SplashScreen.hideAsync();
      }
    };

    initializeApp();
  }, []);

  return (
    <GestureHandlerRootView style={styles.container}>
      <StatusBar style="light" />
      <NavigationContainer>
        <PostHogProvider
          apiKey={ENV.posthogApiKey}
          options={{
            host: ENV.posthogHost
          }}
        >
          <AppNavigator />
        </PostHogProvider>
      </NavigationContainer>
    </GestureHandlerRootView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
});

export default App;

================
File: babel.config.js
================
module.exports = function(api) {
  api.cache(true);
  return {
    presets: ['babel-preset-expo'],
    plugins: [
      [
        'module-resolver',
        {
          alias: {
            'react-native-encrypted-storage': './src/mocks/react-native-encrypted-storage.ts'
          },
        },
      ],
    ],
  };
};

================
File: index.ts
================
import { registerRootComponent } from 'expo';

import App from './App';




registerRootComponent(App);

================
File: package.json
================
{
  "name": "ghostex-wallet",
  "version": "1.0.0",
  "main": "index.ts",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web"
  },
  "dependencies": {
    "@expo/metro-runtime": "~4.0.1",
    "@react-native-async-storage/async-storage": "^1.23.1",
    "@react-navigation/bottom-tabs": "^7.3.2",
    "@react-navigation/native": "^7.0.18",
    "@react-navigation/stack": "^7.2.2",
    "babel-plugin-module-resolver": "^4.1.0",
    "dotenv": "^16.4.7",
    "expo": "~52.0.40",
    "expo-application": "~6.0.2",
    "expo-constants": "^17.0.8",
    "expo-device": "~7.0.2",
    "expo-file-system": "~18.0.11",
    "expo-local-authentication": "~15.0.2",
    "expo-localization": "~16.0.1",
    "expo-secure-store": "^14.0.1",
    "expo-splash-screen": "^0.29.22",
    "expo-status-bar": "~2.0.1",
    "lottie-react-native": "^7.1.0",
    "posthog-react-native": "^3.12.0",
    "react": "18.3.1",
    "react-native": "0.76.7",
    "react-native-encrypted-storage": "^4.0.3",
    "react-native-gesture-handler": "~2.20.2",
    "react-native-reanimated": "~3.16.1",
    "react-native-safe-area-context": "4.12.0",
    "react-native-web": "~0.19.13",
    "zustand": "^5.0.3"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@types/react": "~18.3.12",
    "typescript": "^5.3.3"
  },
  "private": true
}

================
File: src/components/common/Button.tsx
================
import React from 'react';
import {
  TouchableOpacity,
  Text,
  StyleSheet,
  ActivityIndicator,
  View,
  StyleProp,
  ViewStyle,
  TextStyle,
  TouchableOpacityProps
} from 'react-native';

interface ButtonProps extends TouchableOpacityProps {
  title: string;
  onPress: () => void;
  variant?: 'primary' | 'secondary' | 'outline' | 'text';
  size?: 'small' | 'medium' | 'large';
  fullWidth?: boolean;
  loading?: boolean;
  disabled?: boolean;
  style?: StyleProp<ViewStyle>;
  textStyle?: StyleProp<TextStyle>;
  icon?: React.ReactNode;
  iconPosition?: 'left' | 'right';
}

const Button: React.FC<ButtonProps> = ({
  title,
  onPress,
  variant = 'primary',
  size = 'medium',
  fullWidth = false,
  loading = false,
  disabled = false,
  style,
  textStyle,
  icon,
  iconPosition = 'left',
  ...rest
}) => {
  const getButtonStyle = () => {
    let baseStyle: ViewStyle = {...styles.button};

    switch (variant) {
      case 'primary':
        baseStyle = {...baseStyle, ...styles.primaryButton};
        break;
      case 'secondary':
        baseStyle = {...baseStyle, ...styles.secondaryButton};
        break;
      case 'outline':
        baseStyle = {...baseStyle, ...styles.outlineButton};
        break;
      case 'text':
        baseStyle = {...baseStyle, ...styles.textButton};
        break;
    }

    switch (size) {
      case 'small':
        baseStyle = {...baseStyle, ...styles.smallButton};
        break;
      case 'medium':
        baseStyle = {...baseStyle, ...styles.mediumButton};
        break;
      case 'large':
        baseStyle = {...baseStyle, ...styles.largeButton};
        break;
    }

    if (fullWidth) {
      baseStyle = {...baseStyle, ...styles.fullWidth};
    }

    if (disabled || loading) {
      baseStyle = {...baseStyle, ...styles.disabledButton};
    }

    return baseStyle;
  };

  const getTextStyle = () => {
    let baseStyle: TextStyle = {...styles.buttonText};

    switch (variant) {
      case 'primary':
        baseStyle = {...baseStyle, ...styles.primaryText};
        break;
      case 'secondary':
        baseStyle = {...baseStyle, ...styles.secondaryText};
        break;
      case 'outline':
        baseStyle = {...baseStyle, ...styles.outlineText};
        break;
      case 'text':
        baseStyle = {...baseStyle, ...styles.textButtonText};
        break;
    }

    switch (size) {
      case 'small':
        baseStyle = {...baseStyle, ...styles.smallText};
        break;
      case 'medium':
        baseStyle = {...baseStyle, ...styles.mediumText};
        break;
      case 'large':
        baseStyle = {...baseStyle, ...styles.largeText};
        break;
    }

    if (disabled || loading) {
      baseStyle = {...baseStyle, ...styles.disabledText};
    }

    return baseStyle;
  };

  const handlePress = () => {
    if (!disabled && !loading) {
      onPress();
    }
  };

  return (
    <TouchableOpacity
      onPress={handlePress}
      style={[getButtonStyle(), style]}
      activeOpacity={disabled || loading ? 1 : 0.7}
      disabled={disabled || loading}
      {...rest}
    >
      <View style={styles.buttonContent}>
        {loading ? (
          <ActivityIndicator
            size="small"
            color={variant === 'outline' || variant === 'text' ? '#3366FF' : '#FFFFFF'}
          />
        ) : (
          <>
            {icon && iconPosition === 'left' && <View style={styles.leftIcon}>{icon}</View>}
            <Text style={[getTextStyle(), textStyle]}>{title}</Text>
            {icon && iconPosition === 'right' && <View style={styles.rightIcon}>{icon}</View>}
          </>
        )}
      </View>
    </TouchableOpacity>
  );
};

const styles = StyleSheet.create({
  button: {
    borderRadius: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  buttonContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
  },
  buttonText: {
    fontWeight: 'bold',
  },
  primaryButton: {
    backgroundColor: '#3366FF',
  },
  secondaryButton: {
    backgroundColor: '#2A2A2A',
  },
  outlineButton: {
    backgroundColor: 'transparent',
    borderWidth: 1,
    borderColor: '#3366FF',
  },
  textButton: {
    backgroundColor: 'transparent',
  },
  smallButton: {
    paddingVertical: 8,
    paddingHorizontal: 12,
  },
  mediumButton: {
    paddingVertical: 12,
    paddingHorizontal: 16,
  },
  largeButton: {
    paddingVertical: 16,
    paddingHorizontal: 20,
  },
  primaryText: {
    color: '#FFFFFF',
  },
  secondaryText: {
    color: '#FFFFFF',
  },
  outlineText: {
    color: '#3366FF',
  },
  textButtonText: {
    color: '#3366FF',
  },
  smallText: {
    fontSize: 12,
  },
  mediumText: {
    fontSize: 14,
  },
  largeText: {
    fontSize: 16,
  },
  disabledButton: {
    opacity: 0.5,
  },
  disabledText: {
    opacity: 0.8,
  },
  fullWidth: {
    width: '100%',
  },
  leftIcon: {
    marginRight: 8,
  },
  rightIcon: {
    marginLeft: 8,
  },
});

export default Button;

================
File: src/components/common/Card.tsx
================
import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';
import { CardProps } from '../../types/index';

const Card: React.FC<CardProps> = ({
  children,
  title,
  style,
  titleStyle,
  contentStyle,
  onPress,
}) => {
  const CardContainer = onPress ? TouchableOpacity : View;

  return (
    <CardContainer
      style={[styles.container, style]}
      onPress={onPress}
      activeOpacity={onPress ? 0.8 : 1}
    >
      {title && <Text style={[styles.title, titleStyle]}>{title}</Text>}
      <View style={[styles.content, contentStyle]}>{children}</View>
    </CardContainer>
  );
};

const styles = StyleSheet.create({
  container: {
    backgroundColor: '#1E1E1E',
    borderRadius: 12,
    padding: 16,
    marginVertical: 8,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 12,
    color: '#FFFFFF',
  },
  content: {
    width: '100%',
  },
});

export default Card;

================
File: src/components/common/DebugConsole.tsx
================
import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';

const originalConsoleLog = console.log;
const originalConsoleWarn = console.warn;
const originalConsoleError = console.error;

let logMessages: {type: 'log' | 'warn' | 'error', message: string}[] = [];

const MAX_LOGS = 50;

console.log = (...args) => {
  originalConsoleLog(...args);
  const message = args.map(arg =>
    typeof arg === 'object' ? JSON.stringify(arg) : String(arg)
  ).join(' ');

  logMessages.push({type: 'log', message});
  if (logMessages.length > MAX_LOGS) {
    logMessages.shift();
  }
};

console.warn = (...args) => {
  originalConsoleWarn(...args);
  const message = args.map(arg =>
    typeof arg === 'object' ? JSON.stringify(arg) : String(arg)
  ).join(' ');

  logMessages.push({type: 'warn', message});
  if (logMessages.length > MAX_LOGS) {
    logMessages.shift();
  }
};

console.error = (...args) => {
  originalConsoleError(...args);
  const message = args.map(arg =>
    typeof arg === 'object' ? JSON.stringify(arg) : String(arg)
  ).join(' ');

  logMessages.push({type: 'error', message});
  if (logMessages.length > MAX_LOGS) {
    logMessages.shift();
  }
};

const DebugConsole: React.FC = () => {
  const [visible, setVisible] = useState(false);
  const [logs, setLogs] = useState<typeof logMessages>([]);

  useEffect(() => {
    const interval = setInterval(() => {
      setLogs([...logMessages]);
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  if (!visible) {
    return (
      <TouchableOpacity
        style={styles.toggleButton}
        onPress={() => setVisible(true)}
      >
        <Text style={styles.toggleButtonText}>Debug</Text>
      </TouchableOpacity>
    );
  }

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.title}>Debug Console</Text>
        <TouchableOpacity onPress={() => setVisible(false)}>
          <Text style={styles.closeButton}>×</Text>
        </TouchableOpacity>
      </View>

      <ScrollView style={styles.logContainer}>
        {logs.map((log, index) => (
          <Text
            key={index}
            style={[
              styles.logEntry,
              log.type === 'warn' ? styles.warnLog : null,
              log.type === 'error' ? styles.errorLog : null
            ]}
          >
            {log.message}
          </Text>
        ))}
      </ScrollView>

      <View style={styles.footer}>
        <TouchableOpacity
          style={styles.clearButton}
          onPress={() => {
            logMessages = [];
            setLogs([]);
          }}
        >
          <Text style={styles.clearButtonText}>Limpiar</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 300,
    backgroundColor: 'rgba(0, 0, 0, 0.9)',
    zIndex: 9999,
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 8,
    backgroundColor: '#333',
  },
  title: {
    color: '#FFF',
    fontWeight: 'bold',
  },
  closeButton: {
    color: '#FFF',
    fontSize: 24,
    padding: 4,
  },
  logContainer: {
    flex: 1,
    padding: 8,
  },
  logEntry: {
    color: '#FFF',
    fontSize: 12,
    fontFamily: 'monospace',
    marginBottom: 4,
  },
  warnLog: {
    color: '#FFFF00',
  },
  errorLog: {
    color: '#FF6666',
  },
  footer: {
    padding: 8,
    borderTopWidth: 1,
    borderTopColor: '#333',
    alignItems: 'center',
  },
  clearButton: {
    padding: 8,
    backgroundColor: '#555',
    borderRadius: 4,
  },
  clearButtonText: {
    color: '#FFF',
  },
  toggleButton: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
    paddingVertical: 8,
    paddingHorizontal: 12,
    borderRadius: 20,
    zIndex: 9999,
  },
  toggleButtonText: {
    color: '#FFF',
    fontSize: 12,
  },
});

export default DebugConsole;

================
File: src/components/common/Input.tsx
================
import React, { useState } from 'react';
import {
  View,
  TextInput,
  Text,
  StyleSheet,
  TouchableOpacity,
} from 'react-native';
import { InputProps } from '../../types/index';
import { Ionicons } from '@expo/vector-icons';

const Input: React.FC<InputProps> = ({
  label,
  error,
  isPassword = false,
  containerStyle,
  labelStyle,
  inputStyle,
  errorStyle,
  ...props
}) => {
  const [secureTextEntry, setSecureTextEntry] = useState(isPassword);

  const toggleSecureEntry = () => {
    setSecureTextEntry((prev: boolean) => !prev);
  };

  return (
    <View style={[styles.container, containerStyle]}>
      {label && <Text style={[styles.label, labelStyle]}>{label}</Text>}

      <View style={styles.inputContainer}>
        <TextInput
          style={[
            styles.input,
            error ? styles.inputError : {},
            inputStyle,
          ]}
          secureTextEntry={secureTextEntry}
          placeholderTextColor="#666"
          {...props}
        />

        {isPassword && (
          <TouchableOpacity
            style={styles.iconContainer}
            onPress={toggleSecureEntry}
          >
            <Ionicons
              name={secureTextEntry ? 'eye' : 'eye-off'}
              size={24}
              color="#666"
            />
          </TouchableOpacity>
        )}
      </View>

      {error && (
        <Text style={[styles.errorText, errorStyle]}>{error}</Text>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    marginBottom: 16,
    width: '100%',
  },
  label: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 8,
    color: '#FFF',
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    width: '100%',
  },
  input: {
    flex: 1,
    backgroundColor: '#1E1E1E',
    borderRadius: 8,
    paddingHorizontal: 16,
    paddingVertical: 12,
    fontSize: 16,
    color: '#FFFFFF',
    borderWidth: 1,
    borderColor: '#333',
  },
  inputError: {
    borderColor: '#FF4D4D',
  },
  iconContainer: {
    position: 'absolute',
    right: 16,
    height: '100%',
    justifyContent: 'center',
  },
  errorText: {
    color: '#FF4D4D',
    fontSize: 14,
    marginTop: 4,
  },
});

export default Input;

================
File: src/components/common/ScrollContainer.tsx
================
import React from 'react';
import { ScrollView, StyleSheet, View, StatusBar } from 'react-native';

interface ScrollContainerProps {
  children: React.ReactNode;
  style?: object;
  contentContainerStyle?: object;
}

const ScrollContainer: React.FC<ScrollContainerProps> = ({
  children,
  style,
  contentContainerStyle
}) => {
  return (
    <ScrollView
      style={[styles.container, style]}
      contentContainerStyle={[styles.contentContainer, contentContainerStyle]}
      showsVerticalScrollIndicator={true}
      scrollEventThrottle={16}
      bounces={true}
      overScrollMode="always"
    >
      <StatusBar barStyle="light-content" backgroundColor="#121212" />
      <View style={styles.innerContainer}>
        {children}
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  contentContainer: {
    flexGrow: 1,
    paddingBottom: 20,
  },
  innerContainer: {
    flex: 1,
    paddingHorizontal: 16,
    paddingTop: 16,
  },
});

export default ScrollContainer;

================
File: src/components/common/ToggleSwitch.tsx
================
import React from 'react';
import { View, Text, StyleSheet, Switch, Platform } from 'react-native';
import { ToggleSwitchProps } from '../../types/index';

const ToggleSwitch: React.FC<ToggleSwitchProps> = ({
  value,
  onValueChange,
  disabled = false,
  label,
  containerStyle,
  labelStyle,
}) => {
  return (
    <View style={[styles.container, containerStyle]}>
      {label && <Text style={[styles.label, labelStyle]}>{label}</Text>}
      <Switch
        value={value}
        onValueChange={onValueChange}
        disabled={disabled}
        trackColor={{ false: '#767577', true: '#3366FF' }}
        thumbColor={value ? '#FFFFFF' : '#F4F3F4'}
        ios_backgroundColor="#3e3e3e"
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginVertical: 8,
    paddingVertical: 8,
  },
  label: {
    fontSize: 16,
    color: '#FFFFFF',
    flex: 1,
  },
});

export default ToggleSwitch;

================
File: src/config/env.ts
================
import Constants from 'expo-constants';

const ENV = {
  posthogApiKey: Constants.expoConfig?.extra?.posthogApiKey ?? '',
  posthogHost: Constants.expoConfig?.extra?.posthogHost ?? '',
  isDevelopment: __DEV__,
};

export default ENV;

================
File: src/mocks/react-native-encrypted-storage.ts
================
const memoryStorage: Record<string, string> = {};

export default {
  setItem: async (key: string, value: string): Promise<void> => {
    console.log('[EncryptedStorage mock] setItem', key);
    memoryStorage[key] = value;
    return Promise.resolve();
  },

  getItem: async (key: string): Promise<string | null> => {
    console.log('[EncryptedStorage mock] getItem', key);
    return Promise.resolve(memoryStorage[key] || null);
  },

  removeItem: async (key: string): Promise<void> => {
    console.log('[EncryptedStorage mock] removeItem', key);
    delete memoryStorage[key];
    return Promise.resolve();
  },

  clear: async (): Promise<void> => {
    console.log('[EncryptedStorage mock] clear');
    Object.keys(memoryStorage).forEach(key => {
      delete memoryStorage[key];
    });
    return Promise.resolve();
  }
};

================
File: src/navigation/AppNavigator.tsx
================
import React, { useEffect, useState } from 'react';
import { createStackNavigator } from '@react-navigation/stack';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { Ionicons } from '@expo/vector-icons';
import { StyleSheet } from 'react-native';

import WelcomeScreen from '../screens/auth/WelcomeScreen';
import CreateWalletScreen from '../screens/auth/CreateWalletScreen';
import SetupSecurityScreen from '../screens/auth/SetupSecurityScreen';
import BiometricSetupScreen from '../screens/auth/BiometricSetupScreen';
import SuccessScreen from '../screens/auth/SuccessScreen';

import DashboardScreen from '../screens/wallet/DashboardScreen';
import TokenDetailsScreen from '../screens/wallet/TokenDetailsScreen';
import SwapScreen from '../screens/wallet/SwapScreen';
import GovernanceScreen from '../screens/governance/GovernanceScreen';
import ProposalDetailsScreen from '../screens/governance/ProposalDetailsScreen';
import CreateProposalScreen from '../screens/governance/CreateProposalScreen';
import SettingsScreen from '../screens/wallet/SettingsScreen';

import { RootStackParamList } from './types';
import useWalletStore from '../store/useWalletStore';
import analyticsService from '../services/analytics/analyticsService';
import LoadingScreen from '../screens/loading/LoadingScreen';

const Stack = createStackNavigator<RootStackParamList>();
const Tab = createBottomTabNavigator<RootStackParamList>();

const tabIcon = (iconName: string) => {
  return ({ color, size }: { color: string; size: number }) => (
    <Ionicons name={iconName as any} size={size} color={color} />
  );
};

const MainTabs = () => {
  return (
    <Tab.Navigator
      screenOptions={{
        tabBarActiveTintColor: '#3366FF',
        tabBarInactiveTintColor: '#888888',
        tabBarStyle: {
          backgroundColor: '#1E1E1E',
          borderTopColor: '#333333',
        },
        headerShown: false,
      }}
    >
      <Tab.Screen
        name="Dashboard"
        component={DashboardScreen}
        options={{
          tabBarIcon: tabIcon('wallet-outline'),
          tabBarLabel: "Wallet"
        }}
      />
      <Tab.Screen
        name="Swap"
        component={SwapScreen}
        options={{
          tabBarIcon: tabIcon('swap-horizontal-outline'),
          tabBarLabel: "Swap"
        }}
      />
      <Tab.Screen
        name="Governance"
        component={GovernanceScreen}
        options={{
          tabBarIcon: tabIcon('people-outline'),
          tabBarLabel: "Governance"
        }}
      />
      <Tab.Screen
        name="Settings"
        component={SettingsScreen}
        options={{
          tabBarIcon: tabIcon('settings-outline'),
          tabBarLabel: "Settings"
        }}
      />
    </Tab.Navigator>
  );
};

const AppNavigator = () => {
  const { isInitialized, publicKey, isLoading, initializeWallet } = useWalletStore();
  const [appReady, setAppReady] = useState(false);

  useEffect(() => {

    const initServices = async () => {
      await analyticsService.initialize();

      if (initializeWallet) {
        await initializeWallet();
      }

      setAppReady(true);
    };

    initServices();
  }, [initializeWallet]);

  if (!appReady) {
    return <LoadingScreen />;
  }

  return (
    <Stack.Navigator screenOptions={{ headerShown: false }}>
      {!publicKey ? (
        <>
          <Stack.Screen name="Welcome" component={WelcomeScreen} />
          <Stack.Screen name="CreateWallet" component={CreateWalletScreen} />
          <Stack.Screen name="SetupSecurity" component={SetupSecurityScreen} />
          <Stack.Screen name="BiometricSetup" component={BiometricSetupScreen} />
          <Stack.Screen name="Success" component={SuccessScreen} />
        </>
      ) : (
        <>
          <Stack.Screen name="Main" component={MainTabs} />
          <Stack.Screen
            name="TokenDetails"
            component={TokenDetailsScreen}
            options={{
              headerShown: true,
              headerTitle: "Token Details",
              headerStyle: styles.header,
              headerTintColor: '#FFFFFF'
            }}
          />
          <Stack.Screen
            name="ProposalDetails"
            component={ProposalDetailsScreen}
            options={{
              headerShown: true,
              headerTitle: "Proposal Details",
              headerStyle: styles.header,
              headerTintColor: '#FFFFFF'
            }}
          />
          <Stack.Screen
            name="CreateProposal"
            component={CreateProposalScreen}
            options={{
              headerShown: true,
              headerTitle: "Create Proposal",
              headerStyle: styles.header,
              headerTintColor: '#FFFFFF'
            }}
          />
        </>
      )}
    </Stack.Navigator>
  );
};

const styles = StyleSheet.create({
  header: {
    backgroundColor: '#1A1A1A',
    elevation: 0,
    shadowOpacity: 0,
    borderBottomWidth: 0,
  },
});

export default AppNavigator;

================
File: src/navigation/types.ts
================
export type RootStackParamList = {
  Auth: undefined;
  Main: undefined;

  Welcome: undefined;
  CreateWallet: undefined;
  SetupSecurity: { alias: string };
  BiometricSetup: {
    alias: string;
    passkey: string;
    enableBiometric: boolean;
  };
  Success: {
    alias: string;
    passkey: string;
    enableBiometric: boolean;
  };

  MainTabs: undefined;

  Dashboard: undefined;
  Swap: undefined;
  TokenDetails: {
    tokenId: string;
  };
  Governance: undefined;
  ProposalDetails: { proposalId: string };
  CreateProposal: undefined;
  Settings: undefined;
};

================
File: src/screens/auth/BiometricSetupScreen.tsx
================
import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import React, { useEffect, useState } from 'react';
import { Alert, Image, StyleSheet, Text, View } from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import { RootStackParamList } from '../../navigation/types';
import analyticsService from '../../services/analytics/analyticsService';
import encryptionService from '../../services/encryption/encryptionService';

type NavigationProp = StackNavigationProp<RootStackParamList, 'BiometricSetup'>;
type RouteProps = RouteProp<RootStackParamList, 'BiometricSetup'>;

const BiometricSetupScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const route = useRoute<RouteProps>();
  const { alias, passkey, enableBiometric } = route.params;

  const [attempts, setAttempts] = useState(0);
  const [isAuthenticating, setIsAuthenticating] = useState(false);

  useEffect(() => {
    analyticsService.trackScreen('BiometricSetupScreen');
    if (enableBiometric) {
      authenticateWithBiometrics();
    }
  }, []);

  const authenticateWithBiometrics = async () => {
    if (attempts >= 3) {
      analyticsService.trackEvent({
        name: 'biometric_max_attempts_reached',
      });

      Alert.alert(
        "Attempts limit reached",
        "You have reached the limit of biometric authentication attempts. You will continue without biometrics.",
        [
          { text: "Continue", onPress: () => proceedToSuccess(false) }
        ]
      );
      return;
    }

    setIsAuthenticating(true);

    try {
      analyticsService.trackEvent({
        name: 'biometric_authentication_started',
        properties: { attempt: attempts + 1 }
      });

      const isAuthenticated = await encryptionService.authenticateWithBiometrics(
        "Verifica tu identidad para configurar la biometría"
      );

      if (isAuthenticated) {
        analyticsService.trackEvent({
          name: 'biometric_authentication_success',
        });
        proceedToSuccess(true);
      } else {
        setAttempts(prev => prev + 1);
        analyticsService.trackEvent({
          name: 'biometric_authentication_failed',
          properties: { attempts: attempts + 1 }
        });

        Alert.alert(
          "Authentication failed",
          "Unable to verify your identity. Please try again.",
          [{ text: "Accept" }]
        );
      }
    } catch (error) {
      console.error('Biometric authentication error:', error);
      setAttempts(prev => prev + 1);
    } finally {
      setIsAuthenticating(false);
    }
  };

  const handleSkip = () => {
    analyticsService.trackEvent({
      name: 'biometric_setup_skipped',
    });
    proceedToSuccess(false);
  };

  const proceedToSuccess = (withBiometrics: boolean) => {
    navigation.replace('Success', {
      alias,
      passkey,
      enableBiometric: withBiometrics,
    });
  };

  const getStyles = () => StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#121212',
      padding: 20,
    },
    contentContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
    },
    title: {
      fontSize: 28,
      fontWeight: 'bold',
      color: '#FFFFFF',
      marginBottom: 24,
      textAlign: 'center',
    },
    subtitle: {
      fontSize: 18,
      color: '#BBBBBB',
      marginBottom: 32,
    },
    biometricCard: {
      alignItems: 'center',
      marginBottom: 24,
    },
    fingerprint: {
      width: 120,
      height: 120,
      marginVertical: 24,
    },
    instructionText: {
      fontSize: 16,
      color: '#FFFFFF',
      textAlign: 'center',
      marginBottom: 16,
    },
    attemptsText: {
      fontSize: 14,
      color: attempts >= 3 ? '#FF4D4D' : '#BBBBBB',
      marginTop: 8,
    },
    buttonContainer: {
      marginTop: 16,
    },
    button: {
      marginBottom: 12,
    },
    skipButton: {
      marginTop: 8,
    },
  });

  const styles = getStyles();

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Biometric setup</Text>
      <Text style={styles.subtitle}>
        Increase the security of your wallet through biometric authentication.
      </Text>

      <Card style={styles.biometricCard}>
        <Image
          source={{ uri: 'https://via.placeholder.com/120.png?text=Fingerprint' }}
          style={styles.fingerprint}
          resizeMode="contain"
        />

        <Text style={styles.instructionText}>
          Use your fingerprint to confirm your identity
        </Text>

        <Text style={styles.attemptsText}>
          Remaining attempts: {3 - attempts}
        </Text>
      </Card>

      <View style={styles.buttonContainer}>
        <Button
          title="Retry"
          onPress={authenticateWithBiometrics}
          disabled={isAuthenticating || attempts >= 3}
          loading={isAuthenticating}
          style={styles.button}
        />

        <Button
          title="Continue without biometrics"
          onPress={handleSkip}
          variant="outline"
          style={styles.skipButton}
          disabled={isAuthenticating}
        />
      </View>
    </View>
  );
};

export default BiometricSetupScreen;

================
File: src/screens/auth/CreateWalletScreen.tsx
================
import React, { useState } from 'react';
import { View, Text, StyleSheet, ActivityIndicator, ScrollView, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Input from '../../components/common/Input';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import analyticsService from '../../services/analytics/analyticsService';

type NavigationProp = StackNavigationProp<RootStackParamList, 'CreateWallet'>;

const CreateWalletScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const [alias, setAlias] = useState('');
  const [isVerifying, setIsVerifying] = useState(false);
  const [error, setError] = useState('');

  React.useEffect(() => {
    analyticsService.trackScreen('CreateWalletScreen');
  }, []);

  const handleAliasChange = (text: string) => {
    setAlias(text);
    if (error) setError('');
  };

  const validateAlias = (alias: string): boolean => {
    const aliasRegex = /^[a-zA-Z0-9_]{3,20}$/;
    if (!aliasRegex.test(alias)) {
      setError('The alias must be between 3 and 20 characters (letters, numbers and underscores)');
      return false;
    }
    return true;
  };

  const checkAliasAvailability = async (alias: string): Promise<boolean> => {
    setIsVerifying(true);
    try {
      await new Promise(resolve => setTimeout(resolve, 1500));

      const isAvailable = alias.toLowerCase() !== 'admin';

      if (!isAvailable) {
        setError('This alias is already in use. Please choose another one.');
      }

      return isAvailable;
    } catch (error) {
      setError('Error verifying alias availability. Please try again.');
      return false;
    } finally {
      setIsVerifying(false);
    }
  };

  const handleContinue = async () => {
    if (!validateAlias(alias)) {
      return;
    }

    const isAvailable = await checkAliasAvailability(alias);

    if (isAvailable) {
      analyticsService.trackEvent({
        name: 'alias_selected',
        properties: {
          aliasLength: alias.length,
        },
      });

      navigation.navigate('SetupSecurity', { alias });
    }
  };

  return (
    <ScrollView style={styles.scrollView}>
      <View style={styles.container}>
        <Text style={styles.title}>Create your identity on the blockchain</Text>

        <Text style={styles.description}>
          Choose a unique alias that will identify you on the blockchain. This alias will be your public address.
        </Text>

        <Card style={styles.formCard}>
          <Input
            label="Your alias"
            placeholder="Ej: john_mcafee"
            value={alias}
            onChangeText={handleAliasChange}
            autoCapitalize="none"
            autoCorrect={false}
            error={error}
          />

          {isVerifying && (
            <View style={styles.verifyingContainer}>
              <ActivityIndicator size="small" color="#3366FF" />
              <Text style={styles.verifyingText}>Verifying availability...</Text>
            </View>
          )}

          <Text style={styles.infoText}>
            Your alias is permanent and cannot be changed once created.
          </Text>
        </Card>

        <View style={styles.buttonContainer}>
          <Button
            title="Continue"
            onPress={handleContinue}
            disabled={alias.length < 3 || isVerifying || !!error}
          />
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  scrollView: {
    flex: 1,
    backgroundColor: '#121212',
  },
  container: {
    flex: 1,
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
  },
  description: {
    fontSize: 16,
    color: '#BBBBBB',
    marginBottom: 32,
  },
  formCard: {
    marginBottom: 24,
  },
  verifyingContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 8,
  },
  verifyingText: {
    marginLeft: 8,
    color: '#BBBBBB',
    fontSize: 14,
  },
  infoText: {
    fontSize: 14,
    color: '#999999',
    marginTop: 16,
    fontStyle: 'italic',
  },
  buttonContainer: {
    marginTop: 16,
  },
});

export default CreateWalletScreen;

================
File: src/screens/auth/SetupSecurityScreen.tsx
================
import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import React, { useState } from 'react';
import { ScrollView, StyleSheet, Text, View } from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import Input from '../../components/common/Input';
import PasswordStrengthMeter from '../../components/common/PasswordStrengthMeter';
import ToggleSwitch from '../../components/common/ToggleSwitch';
import { RootStackParamList } from '../../navigation/types';
import analyticsService from '../../services/analytics/analyticsService';
import encryptionService from '../../services/encryption/encryptionService';
import useWalletStore from '../../store/useWalletStore';

type NavigationProp = StackNavigationProp<RootStackParamList, 'SetupSecurity'>;
type RouteProps = RouteProp<RootStackParamList, 'SetupSecurity'>;

const SetupSecurityScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const route = useRoute<RouteProps>();
  const { createWallet } = useWalletStore();
  const { alias } = route.params || {};

  const [passkey, setPasskey] = useState('');
  const [confirmPasskey, setConfirmPasskey] = useState('');
  const [enableBiometric, setEnableBiometric] = useState(false);
  const [isBiometricSupported, setIsBiometricSupported] = useState(false);
  const [passkeyError, setPasskeyError] = useState('');
  const [confirmError, setConfirmError] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  React.useEffect(() => {
    analyticsService.trackScreen('SetupSecurityScreen');
    checkBiometricSupport();
  }, []);

  const checkBiometricSupport = async () => {
    const supported = await encryptionService.isBiometricSupported();
    setIsBiometricSupported(supported);
  };

  const validatePasskey = (passkey: string): boolean => {
    if (passkey.length < 8) {
      setPasskeyError('The password must be at least 8 characters long');
      return false;
    }

    const hasUpperCase = /[A-Z]/.test(passkey);
    const hasLowerCase = /[a-z]/.test(passkey);
    const hasNumber = /\d/.test(passkey);
    const hasSpecial = /[^A-Za-z0-9]/.test(passkey);

    if (!hasUpperCase || !hasLowerCase || !hasNumber || !hasSpecial) {
      setPasskeyError('The password must include uppercase, lowercase, numbers and special characters');
      return false;
    }

    setPasskeyError('');
    return true;
  };

  const validateConfirmPasskey = (confirm: string): boolean => {
    if (confirm !== passkey) {
      setConfirmError('The passwords do not match');
      return false;
    }

    setConfirmError('');
    return true;
  };

  const handlePasskeyChange = (text: string) => {
    setPasskey(text);
    if (passkeyError) validatePasskey(text);
    if (confirmPasskey) validateConfirmPasskey(confirmPasskey);
  };

  const handleConfirmChange = (text: string) => {
    setConfirmPasskey(text);
    if (confirmError) validateConfirmPasskey(text);
  };

  const handleToggleBiometric = (value: boolean) => {
    setEnableBiometric(value);
  };

  const handleContinue = async () => {
    if (!validatePasskey(passkey) || !validateConfirmPasskey(confirmPasskey)) {
      return;
    }

    navigation.navigate('BiometricSetup', {
      alias,
      passkey,
      enableBiometric
    });
  };

  return (
    <ScrollView style={styles.scrollView}>
      <View style={styles.container}>
        <Text style={styles.title}>Setup your wallet security</Text>

        <Text style={styles.description}>
          Create a secure password to protect your wallet. This password will be required to access your funds.
        </Text>

        <Card style={styles.formCard}>
          <Input
            label="Password"
            placeholder="Enter your password"
            value={passkey}
            onChangeText={handlePasskeyChange}
            secureTextEntry
            isPassword
            error={passkeyError}
          />
          <PasswordStrengthMeter password={passkey} />

          <Input
            label="Confirm password"
            placeholder="Confirm your password"
            value={confirmPasskey}
            onChangeText={handleConfirmChange}
            secureTextEntry
            isPassword
            error={confirmError}
          />

          {isBiometricSupported && (
            <View style={styles.biometricContainer}>
              <ToggleSwitch
                label="Enable biometric authentication"
                value={enableBiometric}
                onValueChange={handleToggleBiometric}
              />
              <Text style={styles.biometricDescription}>
                Use your fingerprint for faster and more secure access.
              </Text>
            </View>
          )}

          <Text style={styles.securityTips}>
            Security tips:
            {'\n'}- Use a unique password that you don't use on other sites
            {'\n'}- Include letters, numbers and symbols
            {'\n'}- Never share your password with anyone
          </Text>
        </Card>

        <View style={styles.buttonContainer}>
          <Button
            title="Continue"
            onPress={handleContinue}
            disabled={!passkey || !confirmPasskey || !!passkeyError || !!confirmError}
          />
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  scrollView: {
    flex: 1,
    backgroundColor: '#121212',
  },
  container: {
    flex: 1,
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
  },
  description: {
    fontSize: 16,
    color: '#BBBBBB',
    marginBottom: 32,
  },
  formCard: {
    marginBottom: 24,
  },
  biometricContainer: {
    marginTop: 16,
  },
  biometricDescription: {
    fontSize: 14,
    color: '#999999',
    marginTop: 8,
  },
  securityTips: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 24,
    lineHeight: 22,
  },
  buttonContainer: {
    marginTop: 16,
  },
});

export default SetupSecurityScreen;

================
File: src/screens/auth/SuccessScreen.tsx
================
import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import LottieView from 'lottie-react-native';
import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, useWindowDimensions, View } from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import { RootStackParamList } from '../../navigation/types';
import analyticsService from '../../services/analytics/analyticsService';
import useWalletStore from '../../store/useWalletStore';

type NavigationProp = StackNavigationProp<RootStackParamList, 'Success'>;
type RouteProps = RouteProp<RootStackParamList, 'Success'>;

const SuccessScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const route = useRoute<RouteProps>();
  const { alias, passkey, enableBiometric } = route.params || {};
  const { width } = useWindowDimensions();

  const { createWallet, isLoading } = useWalletStore();
  const [isLoadingState, setIsLoading] = useState(false);

  useEffect(() => {
    analyticsService.trackScreen('SuccessScreen');
  }, []);

  const handleBridgeUSDC = async () => {
    setIsLoading(true);
    if (alias && passkey) {
      await createWallet(alias, passkey, enableBiometric);
    }
    setIsLoading(false);

    analyticsService.trackEvent({
      name: 'bridge_usdc_selected',
    });
  };

  const handleGoDashboard = async () => {
    setIsLoading(true);
    if (alias && passkey) {
      await createWallet(alias, passkey, enableBiometric);
    }
    setIsLoading(false);

    analyticsService.trackEvent({
      name: 'go_to_dashboard_selected',
    });
  };

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <LottieView
          source={require('../../../assets/success-fireworks-animation.json')}
          autoPlay
          loop={false}
          style={{
            width: 200,
            height: 200,
            alignSelf: 'center',
            marginBottom: 30
          }}
        />

        <Text style={styles.title}>Wallet created successfully!</Text>

        <Text style={styles.subtitle}>
          Your identity on the blockchain has been configured correctly.
        </Text>

        <Card style={styles.walletInfoCard}>
          <View style={styles.infoRow}>
            <Text style={styles.infoLabel}>Alias:</Text>
            <Text style={styles.infoValue}>{alias}</Text>
          </View>

          <View style={styles.infoRow}>
            <Text style={styles.infoLabel}>Biometrics:</Text>
            <Text style={styles.infoValue}>
              {enableBiometric ? 'Enabled' : 'Disabled'}
            </Text>
          </View>
        </Card>
      </View>

      <View style={styles.optionsContainer}>
        <Text style={styles.optionsTitle}>What do you want to do now?</Text>

        <Button
          title="Bridge USDC from Base"
          onPress={handleBridgeUSDC}
          style={styles.optionButton}
          disabled={isLoadingState}
          loading={isLoadingState}
        />

        <Button
          title="Go to dashboard"
          onPress={handleGoDashboard}
          variant="outline"
          style={styles.optionButton}
          disabled={isLoadingState}
        />
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#121212',
    justifyContent: 'space-between',
  },
  header: {
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center',
  },
  successImage: {
    marginBottom: 24,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 16,
  },
  subtitle: {
    fontSize: 16,
    color: '#BBBBBB',
    textAlign: 'center',
    marginBottom: 32,
  },
  walletInfoCard: {
    width: '100%',
    marginVertical: 24,
  },
  infoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 12,
  },
  infoLabel: {
    fontSize: 16,
    color: '#AAAAAA',
  },
  infoValue: {
    fontSize: 16,
    color: '#FFFFFF',
    fontWeight: '600',
  },
  optionsContainer: {
    width: '100%',
    marginBottom: 40,
  },
  optionsTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
    textAlign: 'center',
  },
  optionButton: {
    marginVertical: 8,
  },
});

export default SuccessScreen;

================
File: src/screens/auth/WelcomeScreen.tsx
================
import { Ionicons } from '@expo/vector-icons';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import React from 'react';
import {
  Image,
  StyleSheet,
  Text,
  useWindowDimensions,
  View
} from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import { RootStackParamList } from '../../navigation/types';
import analyticsService from '../../services/analytics/analyticsService';

type NavigationProp = StackNavigationProp<RootStackParamList, 'Welcome'>;

const WelcomeScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const { width } = useWindowDimensions();

  React.useEffect(() => {
    analyticsService.initialize().then(() => {
      console.log("Analytics service initialized");
      analyticsService.trackScreen('WelcomeScreen');
    });
  }, []);

  const handleCreateWallet = () => {
    console.log("Create Wallet button pressed!");
    analyticsService.trackEvent({
      name: 'start_wallet_creation',
    });
    navigation.navigate('CreateWallet');
  };

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <View style={styles.logoContainer}>
          <Image
            source={require('../../../assets/icon.png')}
            style={styles.logo}
            resizeMode="contain"
          />
        </View>
        <Text style={styles.title}>Welcome to ghostEX Wallet</Text>
        <Text style={styles.subtitle}>
          A secure and private wallet to manage your digital assets
        </Text>
      </View>

      <Card style={styles.featuresCard}>
        <View style={styles.featureItem}>
          <Text style={styles.featureTitle}>Total Security</Text>
          <View style={styles.featureRow}>
            <Ionicons name="shield-checkmark" size={24} color="#4CAF50" />
            <Text style={styles.featureDescription}>
              Your keys never leave your device
            </Text>
          </View>
        </View>

        <View style={styles.featureItem}>
          <Text style={styles.featureTitle}>Full Control</Text>
          <View style={styles.featureRow}>
            <Ionicons name="flash" size={24} color="#2196F3" />
            <Text style={styles.featureDescription}>
              Manage your tokens without intermediaries
            </Text>
          </View>
        </View>

        <View style={styles.featureItem}>
          <Text style={styles.featureTitle}>Governance</Text>
          <View style={styles.featureRow}>
            <Ionicons name="finger-print" size={24} color="#9C27B0" />
            <Text style={styles.featureDescription}>
              Participate in network decisions with your tokens
            </Text>
          </View>
        </View>
      </Card>

      <Button
        title="Create Wallet"
        onPress={handleCreateWallet}
        variant="primary"
        style={styles.createButton}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
    padding: 16,
    justifyContent: 'space-between',
  },
  header: {
    alignItems: 'center',
    marginTop: 40,
    marginBottom: 30,
  },
  logoContainer: {
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 24,
  },
  logo: {
    width: 100,
    height: 100,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 12,
  },
  subtitle: {
    fontSize: 16,
    color: '#BBBBBB',
    textAlign: 'center',
  },
  featuresCard: {
    marginTop: 10,
    marginBottom: 20  ,
  },
  featureItem: {
    marginBottom: 16,
  },
  featureTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 4,
  },
  featureDescription: {
    fontSize: 14,
    color: '#AAAAAA',
  },
  createButton: {
    marginTop: 'auto',
    marginBottom: 20,
  },
  featureContainer: {
    marginVertical: 20,
  },
  featureRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginVertical: 10,
    paddingHorizontal: 20,
  },
  featureText: {
    marginLeft: 12,
    fontSize: 16,
    color: '#333',
  },
});

export default WelcomeScreen;

================
File: src/screens/governance/CreateProposalScreen.tsx
================
import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet, ScrollView, Alert, TouchableOpacity } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import Input from '../../components/common/Input';
import useWalletStore from '../../store/useWalletStore';
import analyticsService from '../../services/analytics/analyticsService';
import { Ionicons } from '@expo/vector-icons';

type NavigationProp = StackNavigationProp<RootStackParamList, 'CreateProposal'>;

const CreateProposalScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const { createProposal, isLoading, tokens } = useWalletStore();

  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [errors, setErrors] = useState({
    title: '',
    description: '',
  });

  useEffect(() => {
    analyticsService.trackScreen('CreateProposalScreen');
  }, []);

  const validateForm = () => {
    let isValid = true;
    const newErrors = { title: '', description: '' };

    if (!title.trim()) {
      newErrors.title = 'The title is required';
      isValid = false;
    } else if (title.length < 5) {
      newErrors.title = 'The title must be at least 5 characters';
      isValid = false;
    }

    if (!description.trim()) {
      newErrors.description = 'The description is required';
      isValid = false;
    } else if (description.length < 20) {
      newErrors.description = 'The description must be at least 20 characters';
      isValid = false;
    }

    setErrors(newErrors);
    return isValid;
  };

  const calculateVotingPower = () => {
    return tokens.reduce((total, token) => {
      return total + parseFloat(token.balance);
    }, 0).toFixed(2);
  };

  const hasSufficientPower = parseFloat(calculateVotingPower()) > 0;

  const handleSubmit = async () => {
    if (!validateForm()) {
      return;
    }

    try {
      const success = await createProposal(title, description);

      if (success) {
        analyticsService.trackEvent({
          name: 'proposal_created',
          properties: {
            titleLength: title.length,
            descriptionLength: description.length,
          },
        });

        Alert.alert(
          "Proposal created",
          "Your proposal has been created successfully and is available for voting.",
          [
            { text: "View proposals", onPress: () => navigation.goBack() }
          ]
        );
      } else {
        Alert.alert(
          "Error creating proposal",
          "An error occurred while creating the proposal. Please try again."
        );
      }
    } catch (error) {
      Alert.alert(
        "Error",
        "An unexpected error occurred."
      );
    }
  };

  const handleTitleChange = (text: string) => {
    setTitle(text);
    if (errors.title) {
      setErrors(prev => ({ ...prev, title: '' }));
    }
  };

  const handleDescriptionChange = (text: string) => {
    setDescription(text);
    if (errors.description) {
      setErrors(prev => ({ ...prev, description: '' }));
    }
  };

  return (
    <ScrollView style={styles.container} keyboardShouldPersistTaps="handled">
      <View style={styles.header}>
        <Text style={styles.title}>Create new proposal</Text>
        <Text style={styles.subtitle}>
          Proposals allow token holders to decide the future of the platform.
        </Text>
      </View>

      <Card style={styles.powerCard}>
        <View style={styles.powerContainer}>
          <Text style={styles.powerLabel}>Your voting power</Text>
          <Text style={[
            styles.powerValue,
            !hasSufficientPower && styles.insufficientPower
          ]}>
            {calculateVotingPower()}
          </Text>
        </View>

        {!hasSufficientPower && (
          <View style={styles.warningContainer}>
            <Ionicons name="warning" size={16} color="#FFD700" />
            <Text style={styles.warningText}>
              You need tokens to create proposals
            </Text>
          </View>
        )}
      </Card>

      <Card style={styles.formCard}>
        <Input
          label="Proposal title"
          placeholder="Ej. Update the consensus protocol"
          value={title}
          onChangeText={handleTitleChange}
          error={errors.title}
          maxLength={100}
        />

        <View style={styles.characterCount}>
          <Text style={styles.characterCountText}>
            {title.length}/100
          </Text>
        </View>

        <Input
          label="Detailed description"
          placeholder="Explain your proposal in detail, including its justification and specific changes you propose..."
          value={description}
          onChangeText={handleDescriptionChange}
          error={errors.description}
          multiline
          numberOfLines={6}
          style={styles.textArea}
        />

        <View style={styles.characterCount}>
          <Text style={styles.characterCountText}>
            {description.length}/1000
          </Text>
        </View>

        <Text style={styles.infoText}>
          Once created, the proposal will be open for voting for 7 days.
          Proposals cannot be edited after being created.
        </Text>
      </Card>

      <View style={styles.buttonContainer}>
        <Button
          title="Create proposal"
          onPress={handleSubmit}
          loading={isLoading}
          disabled={isLoading || !title || !description || !hasSufficientPower}
        />

        <Button
          title="Cancel"
          onPress={() => navigation.goBack()}
          variant="outline"
          style={styles.cancelButton}
          disabled={isLoading}
        />
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  header: {
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: '#BBBBBB',
    lineHeight: 22,
  },
  powerCard: {
    margin: 20,
    marginTop: 0,
    marginBottom: 16,
  },
  powerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  powerLabel: {
    fontSize: 16,
    color: '#FFFFFF',
  },
  powerValue: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  insufficientPower: {
    color: '#FF3B30',
  },
  warningContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 12,
    padding: 8,
    backgroundColor: 'rgba(255, 215, 0, 0.1)',
    borderRadius: 4,
  },
  warningText: {
    marginLeft: 8,
    fontSize: 14,
    color: '#FFD700',
  },
  formCard: {
    margin: 20,
    marginTop: 0,
  },
  textArea: {
    height: 120,
    textAlignVertical: 'top',
  },
  characterCount: {
    alignItems: 'flex-end',
    marginTop: -4,
    marginBottom: 16,
  },
  characterCountText: {
    fontSize: 12,
    color: '#888888',
  },
  infoText: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 16,
    lineHeight: 20,
  },
  buttonContainer: {
    margin: 20,
    marginTop: 8,
    marginBottom: 40,
  },
  cancelButton: {
    marginTop: 12,
  },
});

export default CreateProposalScreen;

================
File: src/screens/governance/GovernanceScreen.tsx
================
import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, FlatList, TouchableOpacity, ActivityIndicator } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import useWalletStore from '../../store/useWalletStore';
import analyticsService from '../../services/analytics/analyticsService';
import { Proposal } from '../../types';

type NavigationProp = StackNavigationProp<RootStackParamList>;

const GovernanceScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const { proposals, isLoading, tokens, fetchProposals } = useWalletStore();
  const [refreshing, setRefreshing] = useState(false);

  useEffect(() => {
    console.log("Governance screen in focus");
    analyticsService.trackScreen('GovernanceScreen');

    const fetchData = async () => {
      if (fetchProposals) {
        await fetchProposals();
      } else {
        console.error("fetchProposals method is not available in WalletStore");
      }
    };

    fetchData();
  }, [fetchProposals]);

  const handleRefresh = async () => {
    setRefreshing(true);
    if (fetchProposals) {
      await fetchProposals();
    }
    setRefreshing(false);
  };

  const navigateToProposalDetails = (proposalId: string) => {
    navigation.navigate('ProposalDetails', { proposalId });
  };

  const navigateToCreateProposal = () => {
    navigation.navigate('CreateProposal');
  };


  const calculateVotingPower = () => {
    return tokens.reduce((total, token) => {
      return total + parseFloat(token.balance);
    }, 0).toFixed(2);
  };

  const renderProposalItem = ({ item }: { item: Proposal }) => (
    <TouchableOpacity onPress={() => navigateToProposalDetails(item.id)}>
      <Card style={styles.proposalCard}>
        <View style={styles.proposalHeader}>
          <Text style={styles.proposalTitle}>{item.title}</Text>
          <View style={[
            styles.statusBadge,
            item.status === 'active' ? styles.activeBadge :
            item.status === 'passed' ? styles.passedBadge : styles.rejectedBadge
          ]}>
            <Text style={styles.statusText}>
              {item.status === 'active' ? 'Active' :
               item.status === 'passed' ? 'Passed' : 'Rejected'}
            </Text>
          </View>
        </View>

        <Text style={styles.proposalDescription} numberOfLines={2}>
          {item.description}
        </Text>

        <View style={styles.proposalFooter}>
          <Text style={styles.proposalDate}>
            Ends: {new Date(item.endDate).toLocaleDateString()}
          </Text>
          <Text style={styles.voteCount}>
            {item.votesFor + item.votesAgainst} votes
          </Text>
        </View>
      </Card>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.title}>Governance</Text>
        <Text style={styles.subtitle}>Participate in decisions with your tokens</Text>
      </View>

      <Card style={styles.powerCard}>
        <View style={styles.powerContainer}>
          <Text style={styles.powerLabel}>Your Voting Power</Text>
          <Text style={styles.powerValue}>{calculateVotingPower()}</Text>
        </View>
      </Card>

      <View style={styles.listContainer}>
        <View style={styles.listHeader}>
          <Text style={styles.listTitle}>Active Proposals</Text>
          <Button
            title="Create Proposal"
            onPress={navigateToCreateProposal}
            variant="primary"
            size="small"
          />
        </View>

        {isLoading ? (
          <View style={styles.loadingContainer}>
            <ActivityIndicator size="large" color="#3366FF" />
            <Text style={styles.loadingText}>Loading proposals...</Text>
          </View>
        ) : proposals.length === 0 ? (
          <Card style={styles.emptyCard}>
            <Text style={styles.emptyText}>No proposals available</Text>
            <Text style={styles.emptySubtext}>
              Create a new proposal or check back later
            </Text>
          </Card>
        ) : (
          <FlatList
            data={proposals}
            renderItem={renderProposalItem}
            keyExtractor={item => item.id}
            showsVerticalScrollIndicator={false}
            contentContainerStyle={styles.listContent}
            onRefresh={handleRefresh}
            refreshing={refreshing}
          />
        )}
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  header: {
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: '#BBBBBB',
    lineHeight: 22,
  },
  powerCard: {
    margin: 20,
    marginTop: 0,
    marginBottom: 16,
  },
  powerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  powerLabel: {
    fontSize: 16,
    color: '#FFFFFF',
  },
  powerValue: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  listContainer: {
    flex: 1,
    margin: 20,
    marginTop: 0,
  },
  listHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  listTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  listContent: {
    paddingBottom: 20,
  },
  proposalCard: {
    marginBottom: 12,
  },
  proposalHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 8,
  },
  proposalTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    flex: 1,
    marginRight: 8,
  },
  statusBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 4,
    alignItems: 'center',
    justifyContent: 'center',
  },
  activeBadge: {
    backgroundColor: 'rgba(51, 102, 255, 0.2)',
  },
  passedBadge: {
    backgroundColor: 'rgba(76, 217, 100, 0.2)',
  },
  rejectedBadge: {
    backgroundColor: 'rgba(255, 59, 48, 0.2)',
  },
  statusText: {
    fontSize: 12,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  proposalDescription: {
    fontSize: 14,
    color: '#BBBBBB',
    marginBottom: 12,
    lineHeight: 20,
  },
  proposalFooter: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  proposalDate: {
    fontSize: 12,
    color: '#AAAAAA',
  },
  voteCount: {
    fontSize: 12,
    color: '#AAAAAA',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: 40,
  },
  loadingText: {
    marginTop: 12,
    fontSize: 16,
    color: '#AAAAAA',
  },
  emptyCard: {
    alignItems: 'center',
    justifyContent: 'center',
    padding: 40,
  },
  emptyText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 8,
  },
  emptySubtext: {
    fontSize: 14,
    color: '#AAAAAA',
    textAlign: 'center',
  },
});

export default GovernanceScreen;

================
File: src/screens/governance/ProposalDetailsScreen.tsx
================
import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert, ActivityIndicator } from 'react-native';
import { useRoute, RouteProp, useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import useWalletStore from '../../store/useWalletStore';
import analyticsService from '../../services/analytics/analyticsService';
import { Ionicons } from '@expo/vector-icons';

type RouteProps = RouteProp<RootStackParamList, 'ProposalDetails'>;
type NavigationProp = StackNavigationProp<RootStackParamList, 'ProposalDetails'>;

const ProposalDetailsScreen: React.FC = () => {
  const route = useRoute<RouteProps>();
  const navigation = useNavigation<NavigationProp>();
  const { proposalId } = route.params;

  const { proposals, votes, castVote, isLoading, tokens } = useWalletStore();
  const [userVote, setUserVote] = useState<boolean | null>(null);

  const proposal = proposals.find(p => p.id === proposalId);

  useEffect(() => {
    if (proposal) {
      analyticsService.trackScreen('ProposalDetailsScreen', {
        proposalId: proposal.id,
        proposalTitle: proposal.title,
      });

      const existingVote = votes.find(v => v.proposalId === proposalId);
      if (existingVote) {
        setUserVote(existingVote.support);
      }
    }
  }, [proposal, votes]);

  if (!proposal) {
    return (
      <View style={styles.container}>
        <View style={styles.loadingContainer}>
          {isLoading ? (
            <>
              <ActivityIndicator size="large" color="#3366FF" />
              <Text style={styles.loadingText}>Loading proposal...</Text>
            </>
          ) : (
            <Text style={styles.errorText}>Proposal not found</Text>
          )}
        </View>
      </View>
    );
  }

  const canVote = proposal.status === 'active' && userVote === null;

  const handleVote = async (support: boolean) => {
    Alert.alert(
      `Confirm vote ${support ? 'for' : 'against'}`,
      `Are you sure you want to vote ${support ? 'for' : 'against'} this proposal?`,
      [
        { text: "Cancel", style: "cancel" },
        {
          text: "Confirm",
          onPress: async () => {
            analyticsService.trackEvent({
              name: 'vote_cast',
              properties: {
                proposalId,
                support,
              },
            });

            const success = await castVote(proposalId, support);
            if (success) {
              setUserVote(support);
            }
          }
        }
      ]
    );
  };

  const calculateVotingPower = () => {
    return tokens.reduce((total, token) => {
      return total + parseFloat(token.balance);
    }, 0).toFixed(2);
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active':
        return '#4CD964';
      case 'passed':
        return '#3366FF';
      case 'rejected':
        return '#FF3B30';
      default:
        return '#8E8E93';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'active':
        return 'Active';
      case 'passed':
        return 'Approved';
      case 'rejected':
        return 'Rejected';
      case 'pending':
        return 'Pending';
      default:
        return status;
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
  };

  const totalVotes = proposal.votesFor + proposal.votesAgainst;
  const forPercentage = totalVotes > 0 ? Math.round((proposal.votesFor / totalVotes) * 100) : 0;
  const againstPercentage = totalVotes > 0 ? Math.round((proposal.votesAgainst / totalVotes) * 100) : 0;

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        <View style={styles.titleContainer}>
          <Text style={styles.title}>{proposal.title}</Text>
          <View style={[styles.statusBadge, { backgroundColor: getStatusColor(proposal.status) }]}>
            <Text style={styles.statusText}>{getStatusText(proposal.status)}</Text>
          </View>
        </View>

        <Text style={styles.createdBy}>Created by: {proposal.creator}</Text>
        <Text style={styles.dates}>
          Start: {formatDate(proposal.startDate)} • End: {formatDate(proposal.endDate)}
        </Text>
      </View>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>Description</Text>
        <Text style={styles.description}>{proposal.description}</Text>
      </Card>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>Voting results</Text>

        <View style={styles.voteStatsContainer}>
          <View style={styles.voteRow}>
            <Text style={styles.voteLabel}>For</Text>
            <View style={styles.progressContainer}>
              <View
                style={[
                  styles.progressBar,
                  styles.forBar,
                  { width: `${forPercentage}%` }
                ]}
              />
            </View>
            <Text style={styles.voteCount}>{proposal.votesFor}</Text>
            <Text style={styles.votePercentage}>{forPercentage}%</Text>
          </View>

          <View style={styles.voteRow}>
            <Text style={styles.voteLabel}>Against</Text>
            <View style={styles.progressContainer}>
              <View
                style={[
                  styles.progressBar,
                  styles.againstBar,
                  { width: `${againstPercentage}%` }
                ]}
              />
            </View>
            <Text style={styles.voteCount}>{proposal.votesAgainst}</Text>
            <Text style={styles.votePercentage}>{againstPercentage}%</Text>
          </View>
        </View>

        <View style={styles.totalContainer}>
          <Text style={styles.totalLabel}>Total participation</Text>
          <Text style={styles.totalVotes}>{totalVotes} votes</Text>
        </View>
      </Card>

      {userVote !== null && (
        <Card style={styles.section}>
          <Text style={styles.sectionTitle}>Your vote</Text>
          <View style={[styles.userVoteContainer, userVote ? styles.userVoteFor : styles.userVoteAgainst]}>
            <Ionicons
              name={userVote ? "checkmark-circle" : "close-circle"}
              size={24}
              color="#FFFFFF"
            />
            <Text style={styles.userVoteText}>
              You voted {userVote ? 'for' : 'against'} this proposal
            </Text>
          </View>
        </Card>
      )}

      {canVote && (
        <Card style={styles.section}>
          <Text style={styles.sectionTitle}>Cast your vote</Text>

          <View style={styles.votingPowerContainer}>
            <Text style={styles.votingPowerLabel}>Your voting power</Text>
            <Text style={styles.votingPowerValue}>{calculateVotingPower()}</Text>
          </View>

          <View style={styles.votingButtonsContainer}>
            <Button
              title="Vote for"
              onPress={() => handleVote(true)}
              style={[styles.votingButton, styles.forButton]}
              loading={isLoading}
              disabled={isLoading}
            />

            <Button
              title="Vote against"
              onPress={() => handleVote(false)}
              style={[styles.votingButton, styles.againstButton]}
              loading={isLoading}
              disabled={isLoading}
            />
          </View>

          <Text style={styles.votingInfo}>
            Your vote cannot be changed once cast. Please ensure you review all the details of the proposal before voting.
          </Text>
        </Card>
      )}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  loadingText: {
    marginTop: 12,
    fontSize: 16,
    color: '#AAAAAA',
  },
  errorText: {
    fontSize: 18,
    color: '#FF4D4D',
    textAlign: 'center',
  },
  header: {
    padding: 20,
    backgroundColor: '#1E1E1E',
  },
  titleContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 12,
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#FFFFFF',
    flex: 1,
    marginRight: 12,
  },
  statusBadge: {
    paddingHorizontal: 10,
    paddingVertical: 4,
    borderRadius: 12,
    alignItems: 'center',
  },
  statusText: {
    color: '#FFFFFF',
    fontSize: 12,
    fontWeight: '600',
  },
  createdBy: {
    fontSize: 14,
    color: '#AAAAAA',
    marginBottom: 4,
  },
  dates: {
    fontSize: 14,
    color: '#AAAAAA',
  },
  section: {
    margin: 16,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 12,
  },
  description: {
    fontSize: 16,
    color: '#BBBBBB',
    lineHeight: 24,
  },
  voteStatsContainer: {
    marginBottom: 12,
  },
  voteRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  voteLabel: {
    width: 80,
    fontSize: 14,
    color: '#FFFFFF',
  },
  progressContainer: {
    flex: 1,
    height: 8,
    backgroundColor: '#2A2A2A',
    borderRadius: 4,
    marginHorizontal: 8,
    overflow: 'hidden',
  },
  progressBar: {
    height: '100%',
    borderRadius: 4,
  },
  forBar: {
    backgroundColor: '#4CD964',
  },
  againstBar: {
    backgroundColor: '#FF3B30',
  },
  voteCount: {
    width: 40,
    fontSize: 14,
    color: '#FFFFFF',
    textAlign: 'right',
    marginRight: 8,
  },
  votePercentage: {
    width: 40,
    fontSize: 14,
    color: '#AAAAAA',
    textAlign: 'right',
  },
  totalContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingTop: 12,
    borderTopWidth: 1,
    borderTopColor: '#333333',
  },
  totalLabel: {
    fontSize: 14,
    color: '#FFFFFF',
  },
  totalVotes: {
    fontSize: 14,
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  userVoteContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 12,
    borderRadius: 8,
  },
  userVoteFor: {
    backgroundColor: 'rgba(76, 217, 100, 0.2)',
  },
  userVoteAgainst: {
    backgroundColor: 'rgba(255, 59, 48, 0.2)',
  },
  userVoteText: {
    marginLeft: 10,
    fontSize: 16,
    color: '#FFFFFF',
  },
  votingPowerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
    backgroundColor: '#2A2A2A',
    padding: 12,
    borderRadius: 8,
  },
  votingPowerLabel: {
    fontSize: 14,
    color: '#AAAAAA',
  },
  votingPowerValue: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  votingButtonsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  votingButton: {
    flex: 1,
    marginHorizontal: 4,
  },
  forButton: {
    backgroundColor: '#4CD964',
  },
  againstButton: {
    backgroundColor: '#FF3B30',
  },
  votingInfo: {
    fontSize: 12,
    color: '#AAAAAA',
    fontStyle: 'italic',
    textAlign: 'center',
  },
});

export default ProposalDetailsScreen;

================
File: src/screens/loading/LoadingScreen.tsx
================
import React from 'react';
import { View, ActivityIndicator, Text, StyleSheet } from 'react-native';

const LoadingScreen: React.FC = () => {
  return (
    <View style={styles.container}>
      <ActivityIndicator size="large" color="#3366FF" />
      <Text style={styles.text}>Loading...</Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#121212',
  },
  text: {
    color: '#FFFFFF',
    marginTop: 16,
    fontSize: 16,
  },
});

export default LoadingScreen;

================
File: src/screens/wallet/DashboardScreen.tsx
================
import React, { useEffect, useRef } from 'react';
import { View, Text, StyleSheet, FlatList, TouchableOpacity, RefreshControl, SafeAreaView, StatusBar, Image } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Card from '../../components/common/Card';
import useWalletStore from '../../store/useWalletStore';
import analyticsService from '../../services/analytics/analyticsService';
import { TokenBalance } from '../../types';

type NavigationProp = StackNavigationProp<RootStackParamList>;

const DashboardScreen: React.FC = () => {
  const navigation = useNavigation<NavigationProp>();
  const { tokens, fetchBalances, isLoading, publicKey, alias } = useWalletStore();

  useEffect(() => {
    console.log("Dashboard screen mounted");
    analyticsService.logScreen('Dashboard');

    if (tokens.length === 0) {
      console.log("No tokens, loading balances...");
      fetchBalances();
    }
  }, []);

  const handleTokenPress = (tokenId: string) => {
    console.log("Token pressed:", tokenId);
    navigation.navigate('TokenDetails', { tokenId });
  };

  const handleRefresh = () => {
    console.log("Manual refresh triggered");
    fetchBalances();
  };

  const ListHeaderComponent = () => (
    <View>
      <View style={styles.header}>
        <Text style={styles.greeting}>Hello, {alias || 'User'}</Text>
        <Text style={styles.walletLabel}>Your wallet</Text>
        <Text style={styles.walletAddress}>{publicKey}</Text>
      </View>

      <View style={styles.balanceContainer}>
        <Text style={styles.balanceLabel}>Total balance</Text>
        <Text style={styles.totalBalance}>$2,500.00</Text>
      </View>

      <Text style={styles.sectionTitle}>Your Assets</Text>
    </View>
  );

  const renderTokenItem = ({ item }: { item: TokenBalance }) => (
    <TouchableOpacity
      onPress={() => handleTokenPress(item.id)}
      activeOpacity={0.7}
      style={styles.tokenCardContainer}
    >
      <Card style={styles.tokenCard}>
        <View style={styles.tokenInfo}>
          <View style={styles.tokenIconContainer}>
            {item.iconUrl ? (
              <Image
                source={item.iconUrl}
                style={styles.tokenIcon}
                resizeMode="contain"
              />
            ) : (
              <View style={styles.tokenIconPlaceholder} />
            )}
          </View>
          <View style={styles.tokenDetails}>
            <Text style={styles.tokenSymbol}>{item.symbol}</Text>
            <Text style={styles.tokenName}>{item.name}</Text>
          </View>
        </View>
        <View style={styles.tokenBalance}>
          <Text style={styles.balanceText}>{item.balance}</Text>
          <Text style={styles.usdValue}>≈ ${parseFloat(item.balance) * 2.5}</Text>
        </View>
      </Card>
    </TouchableOpacity>
  );

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="#121212" />

      <FlatList
        data={tokens}
        keyExtractor={item => item.id}
        renderItem={renderTokenItem}
        ListHeaderComponent={ListHeaderComponent}
        style={styles.list}
        contentContainerStyle={styles.listContent}
        refreshControl={
          <RefreshControl
            refreshing={isLoading}
            onRefresh={handleRefresh}
            tintColor="#FFFFFF"
            colors={["#3366FF"]}
          />
        }
        showsVerticalScrollIndicator={true}
      />
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  list: {
    flex: 1,
  },
  listContent: {
    paddingBottom: 20,
  },
  header: {
    padding: 16,
    paddingTop: 20,
  },
  greeting: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 4,
  },
  walletLabel: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 8,
  },
  walletAddress: {
    fontSize: 12,
    color: '#CCCCCC',
    marginTop: 2,
  },
  balanceContainer: {
    padding: 16,
    backgroundColor: '#1E1E1E',
    borderRadius: 12,
    marginHorizontal: 16,
    marginTop: 8,
  },
  balanceLabel: {
    fontSize: 14,
    color: '#AAAAAA',
  },
  totalBalance: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginTop: 4,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginTop: 24,
    marginBottom: 8,
    paddingHorizontal: 16,
  },
  tokenCardContainer: {
    marginHorizontal: 16,
    marginVertical: 6,
  },
  tokenCard: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
  },
  tokenInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  tokenIconContainer: {
    marginRight: 12,
  },
  tokenIconPlaceholder: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: '#3366FF',
  },
  tokenDetails: {
    justifyContent: 'center',
  },
  tokenSymbol: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  tokenName: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 2,
  },
  tokenBalance: {
    alignItems: 'flex-end',
  },
  balanceText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  usdValue: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 2,
  },
  tokenIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
  },
});

export default DashboardScreen;

================
File: src/screens/wallet/SettingsScreen.tsx
================
import React, { useEffect, useState } from 'react';
import { Alert, ScrollView, StyleSheet, Switch, Text, View } from 'react-native';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import Modal from '../../components/common/Modal';
import ToggleSwitch from '../../components/common/ToggleSwitch';
import analyticsService from '../../services/analytics/analyticsService';
import encryptionService from '../../services/encryption/encryptionService';
import useWalletStore from '../../store/useWalletStore';

const SettingsScreen: React.FC = () => {
  const { alias, isBiometricEnabled, setBiometricEnabled, logout } = useWalletStore();
  const [biometricAvailable, setBiometricAvailable] = useState(false);
  const [analyticsEnabled, setAnalyticsEnabled] = useState(true);
  const [showLogoutModal, setShowLogoutModal] = useState(false);

  useEffect(() => {
    analyticsService.trackScreen('SettingsScreen');
    checkBiometricSupport();
    checkAnalyticsStatus();
  }, []);

  const checkBiometricSupport = async () => {
    const supported = await encryptionService.isBiometricSupported();
    setBiometricAvailable(supported);
  };

  const checkAnalyticsStatus = async () => {
    const isOptedOut = await analyticsService.isOptedOut();
    setAnalyticsEnabled(!isOptedOut);
  };

  const handleBiometricToggle = async (value: boolean) => {
    try {
      if (value) {
        const authenticated = await encryptionService.authenticateWithBiometrics(
          "Confirm your identity to activate biometric authentication"
        );

        if (authenticated) {
          await setBiometricEnabled(true);
          Alert.alert(
            "Success",
            "Biometric authentication has been activated successfully"
          );
        }
      } else {
        await setBiometricEnabled(false);
        Alert.alert(
          "Disabled",
          "Biometric authentication has been disabled"
        );
      }
    } catch (error) {
      Alert.alert(
        "Error",
        "Failed to configure biometric authentication. Please try again."
      );
    }
  };

  const handleAnalyticsToggle = (value: boolean) => {
    if (value) {
      analyticsService.optIn();
    } else {
      analyticsService.optOut();
    }
    setAnalyticsEnabled(value);
  };

  const handleLogoutPress = () => {
    setShowLogoutModal(true);
  };

  const handleLogoutConfirm = async () => {
    analyticsService.trackEvent({
      name: 'logout_confirmed',
    });
    await logout();
    setShowLogoutModal(false);
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>Settings</Text>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>Account information</Text>

        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>Alias:</Text>
          <Text style={styles.infoValue}>{alias}</Text>
        </View>
      </Card>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>Security</Text>

        {biometricAvailable && (
          <Card style={styles.settingCard}>
            <View style={styles.settingRow}>
              <View style={styles.settingInfo}>
                <Text style={styles.settingLabel}>Biometric Authentication</Text>
                <Text style={styles.settingDescription}>
                  Use fingerprint or face recognition to secure your wallet
                </Text>
              </View>
              <Switch
                value={isBiometricEnabled}
                onValueChange={handleBiometricToggle}
                trackColor={{ false: '#767577', true: '#4CAF50' }}
                thumbColor={isBiometricEnabled ? '#fff' : '#f4f3f4'}
              />
            </View>
          </Card>
        )}

        <Button
          title="Change password"
          variant="outline"
          onPress={() => Alert.alert("Function not implemented", "This function will be available in future versions.")}
          style={styles.button}
        />
      </Card>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>Privacy</Text>

        <ToggleSwitch
          label="Share anonymous analytics"
          value={analyticsEnabled}
          onValueChange={handleAnalyticsToggle}
        />

        <Text style={styles.privacyText}>
          Analytics are anonymous and help us improve the application.
          We do not collect personal information or details of your transactions.
        </Text>
      </Card>

      <Card style={styles.section}>
        <Text style={styles.sectionTitle}>About</Text>

        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>Version:</Text>
          <Text style={styles.infoValue}>1.0.0</Text>
        </View>
      </Card>

      <View style={styles.logoutContainer}>
        <Button
          title="Logout"
          variant="secondary"
          style={[styles.logoutButton, { backgroundColor: '#DC3545' }]}
          onPress={handleLogoutPress}
        />
      </View>

      <Modal
        visible={showLogoutModal}
        onClose={() => setShowLogoutModal(false)}
        title="Confirm Logout"
        description="Are you sure you want to logout? You will need your password to access your wallet again."
        actions={[
          {
            text: 'Cancel',
            variant: 'outline',
            onPress: () => setShowLogoutModal(false),
          },
          {
            text: 'Logout',
            variant: 'secondary',
            onPress: handleLogoutConfirm,
          },
        ]}
      />
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#FFFFFF',
    margin: 20,
  },
  section: {
    marginHorizontal: 20,
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
  },
  infoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 12,
  },
  infoLabel: {
    fontSize: 16,
    color: '#AAAAAA',
  },
  infoValue: {
    fontSize: 16,
    color: '#FFFFFF',
    fontWeight: '500',
  },
  button: {
    marginTop: 16,
  },
  privacyText: {
    fontSize: 14,
    color: '#AAAAAA',
    marginTop: 12,
    lineHeight: 20,
  },
  logoutContainer: {
    margin: 20,
    marginTop: 10,
    marginBottom: 40,
  },
  logoutButton: {
    marginTop: 32,
    marginBottom: 24,
  },
  logoutText: {
    color: '#FF4D4D',
  },
  settingCard: {
    marginBottom: 16,
  },
  settingRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 16,
  },
  settingInfo: {
    flex: 1,
    marginRight: 16,
  },
  settingLabel: {
    fontSize: 16,
    fontWeight: '500',
    marginBottom: 4,
  },
  settingDescription: {
    fontSize: 14,
    color: '#666',
  },
});

export default SettingsScreen;

================
File: src/screens/wallet/TokenDetailsScreen.tsx
================
import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert, Image } from 'react-native';
import { useRoute, RouteProp, useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import { RootStackParamList } from '../../navigation/types';
import Button from '../../components/common/Button';
import Card from '../../components/common/Card';
import Input from '../../components/common/Input';
import useWalletStore from '../../store/useWalletStore';
import analyticsService from '../../services/analytics/analyticsService';
import { Ionicons } from '@expo/vector-icons';

type RouteProps = RouteProp<RootStackParamList, 'TokenDetails'>;
type NavigationProp = StackNavigationProp<RootStackParamList, 'TokenDetails'>;

const TokenDetailsScreen: React.FC = () => {
  const route = useRoute<RouteProps>();
  const navigation = useNavigation<NavigationProp>();
  const { tokenId } = route.params;

  const { tokens } = useWalletStore();
  const [amount, setAmount] = useState('');
  const [recipientAddress, setRecipientAddress] = useState('');
  const [activeTab, setActiveTab] = useState<'send' | 'receive'>('send');

  const token = tokens.find(t => t.id === tokenId);

  useEffect(() => {
    if (token) {
      analyticsService.trackScreen('TokenDetailsScreen', { tokenSymbol: token.symbol });
    }
  }, [token]);

  const handleSend = () => {
    Alert.alert(
      "Simulation of transaction",
      `Sent ${amount} ${token?.symbol} to ${recipientAddress}`,
      [{ text: "OK" }]
    );

    analyticsService.trackEvent({
      name: 'token_sent',
      properties: {
        tokenId,
        tokenSymbol: token?.symbol,
        amount,
      },
    });

    setAmount('');
    setRecipientAddress('');
  };

  if (!token) {
    return (
      <View style={styles.container}>
        <Text style={styles.errorText}>Token not found</Text>
      </View>
    );
  }

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        {token.iconUrl ? (
          <Image
            source={token.iconUrl}
            style={styles.tokenIcon}
            resizeMode="contain"
          />
        ) : (
          <View style={styles.tokenIconPlaceholder} />
        )}
        <Text style={styles.tokenSymbol}>{token.symbol}</Text>
        <Text style={styles.tokenName}>{token.name}</Text>
        <Text style={styles.tokenBalance}>
          {parseFloat(token.balance).toFixed(token.decimals === 6 ? 2 : 4)}
        </Text>
      </View>

      <View style={styles.tabContainer}>
        <TouchableOpacity
          style={[styles.tab, activeTab === 'send' && styles.activeTab]}
          onPress={() => setActiveTab('send')}
        >
          <Text style={[styles.tabText, activeTab === 'send' && styles.activeTabText]}>
            Send
          </Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.tab, activeTab === 'receive' && styles.activeTab]}
          onPress={() => setActiveTab('receive')}
        >
          <Text style={[styles.tabText, activeTab === 'receive' && styles.activeTabText]}>
            Receive
          </Text>
        </TouchableOpacity>
      </View>

      {activeTab === 'send' ? (
        <Card style={styles.formCard}>
          <Input
            label={`Amount of ${token.symbol}`}
            placeholder="0.00"
            value={amount}
            onChangeText={setAmount}
            keyboardType="numeric"
          />

          <Input
            label="Recipient address"
            placeholder="Enter an alias or address"
            value={recipientAddress}
            onChangeText={setRecipientAddress}
          />

          <Button
            title={`Send ${token.symbol}`}
            onPress={handleSend}
            disabled={!amount || !recipientAddress}
            style={styles.actionButton}
          />
        </Card>
      ) : (
        <Card style={styles.receiveCard}>
          <View style={styles.qrCodePlaceholder}>
            <Text style={styles.qrText}>QR Code</Text>
          </View>

          <Text style={styles.addressLabel}>Your address:</Text>
          <View style={styles.addressContainer}>
            <Text style={styles.addressText}>
              {`user:${useWalletStore.getState().alias}`}
            </Text>
            <TouchableOpacity style={styles.copyButton}>
              <Ionicons name="copy-outline" size={20} color="#3366FF" />
            </TouchableOpacity>
          </View>

          <Text style={styles.infoText}>
            Share this address to receive payments in {token.symbol}
          </Text>
        </Card>
      )}

      <Card style={styles.infoCard}>
        <Text style={styles.infoCardTitle}>Token information</Text>

        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>Decimals:</Text>
          <Text style={styles.infoValue}>{token.decimals}</Text>
        </View>

        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>Token ID:</Text>
          <Text style={styles.infoValue}>{token.id}</Text>
        </View>
      </Card>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#121212',
  },
  header: {
    padding: 20,
    backgroundColor: '#1E1E1E',
    alignItems: 'center',
    borderBottomLeftRadius: 24,
    borderBottomRightRadius: 24,
  },
  tokenIcon: {
    width: 60,
    height: 60,
    marginBottom: 12,
  },
  tokenIconPlaceholder: {
    width: 60,
    height: 60,
    borderRadius: 30,
    backgroundColor: '#3366FF',
    marginBottom: 12,
  },
  tokenSymbol: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 4,
  },
  tokenName: {
    fontSize: 16,
    color: '#AAAAAA',
    marginBottom: 12,
  },
  tokenBalance: {
    fontSize: 36,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginVertical: 12,
  },
  tabContainer: {
    flexDirection: 'row',
    marginHorizontal: 20,
    marginTop: 20,
    borderRadius: 8,
    overflow: 'hidden',
    backgroundColor: '#1E1E1E',
  },
  tab: {
    flex: 1,
    paddingVertical: 12,
    alignItems: 'center',
  },
  activeTab: {
    backgroundColor: '#3366FF',
  },
  tabText: {
    fontSize: 16,
    fontWeight: '600',
    color: '#BBBBBB',
  },
  activeTabText: {
    color: '#FFFFFF',
  },
  formCard: {
    margin: 20,
  },
  receiveCard: {
    margin: 20,
    alignItems: 'center',
    padding: 24,
  },
  qrCodePlaceholder: {
    width: 200,
    height: 200,
    backgroundColor: '#2A2A2A',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 20,
  },
  qrText: {
    color: '#FFFFFF',
  },
  addressLabel: {
    fontSize: 16,
    color: '#FFFFFF',
    marginBottom: 8,
    alignSelf: 'flex-start',
  },
  addressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#2A2A2A',
    padding: 12,
    borderRadius: 8,
    width: '100%',
    marginBottom: 16,
  },
  addressText: {
    flex: 1,
    color: '#FFFFFF',
    fontSize: 14,
  },
  copyButton: {
    padding: 4,
  },
  infoText: {
    fontSize: 14,
    color: '#AAAAAA',
    textAlign: 'center',
  },
  actionButton: {
    marginTop: 16,
  },
  infoCard: {
    margin: 20,
    marginTop: 0,
  },
  infoCardTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 16,
  },
  infoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 12,
  },
  infoLabel: {
    fontSize: 16,
    color: '#AAAAAA',
  },
  infoValue: {
    fontSize: 16,
    color: '#FFFFFF',
  },
  errorText: {
    fontSize: 18,
    color: '#FF4D4D',
    textAlign: 'center',
    margin: 20,
  },
});

export default TokenDetailsScreen;

================
File: src/services/analytics/analyticsService.ts
================
import { Platform } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import ENV from '../../config/env';

type AnalyticsEvent = {
  name: string;
  properties?: Record<string, any>;
};

type UserProperties = Record<string, any>;

class AnalyticsService {
  private isInitialized: boolean = false;
  private analyticsEnabled: boolean = false;
  private userId: string | null = null;
  private sessionId: string | null = null;

  private posthog = {
    identify: (id: string) => {
      console.log(`[Analytics] Identify user: ${id}`);
      return Promise.resolve();
    },
    screen: (name: string, properties?: Record<string, any>) => {
      console.log(`[Analytics] Screen view: ${name}`, properties);
      return Promise.resolve();
    },
    capture: (event: string, properties?: Record<string, any>) => {
      console.log(`[Analytics] Event: ${event}`, properties);
      return Promise.resolve();
    },
    optIn: () => {
      console.log(`[Analytics] Opted in`);
      return Promise.resolve();
    },
    optOut: () => {
      console.log(`[Analytics] Opted out`);
      return Promise.resolve();
    },
    reset: () => {
      console.log(`[Analytics] Reset`);
      return Promise.resolve();
    }
  };

  constructor() {
    console.log('[AnalyticsService] Instance created');
    this.sessionId = `session_${new Date().getTime()}_${Math.floor(Math.random() * 1000)}`;
  }

  async initialize(): Promise<boolean> {
    if (this.isInitialized) {
      return true;
    }

    try {
      const analyticsEnabled = await AsyncStorage.getItem('analytics_enabled');
      this.analyticsEnabled = analyticsEnabled === 'true';

      console.log('[Analytics] Service initialized, analytics enabled:', this.analyticsEnabled);
      this.isInitialized = true;
      return true;
    } catch (error) {
      console.error('[Analytics] Initialization error:', error);
      return false;
    }
  }

  logScreen(screenName: string, properties?: Record<string, any>): void {
    this.trackScreen(screenName, properties);
  }

  trackScreen(screenName: string, properties?: Record<string, any>): void {
    if (!this.analyticsEnabled || ENV.isDevelopment) {
      console.log(`[Analytics-DEV] Screen view: ${screenName}`, properties);
      return;
    }

    try {
      this.posthog.screen(screenName, {
        ...properties,
        distinct_id: this.userId,
        session_id: this.sessionId,
        platform: Platform.OS,
      });
    } catch (error) {
      console.error('[Analytics] Error tracking screen view:', error);
    }
  }

  trackEvent(event: AnalyticsEvent): void {
    if (!this.analyticsEnabled || ENV.isDevelopment) {
      console.log(`[Analytics-DEV] Event tracked: ${event.name}`, event.properties);
      return;
    }

    try {
      this.posthog.capture(event.name, {
        ...event.properties,
        distinct_id: this.userId,
        session_id: this.sessionId,
        platform: Platform.OS,
      });
    } catch (error) {
      console.error('[Analytics] Error registering event:', error);
    }
  }

  setUserProperties(userId: string, properties?: UserProperties): void {
    try {
      if (!ENV.isDevelopment) {
        this.userId = userId;
        this.posthog.identify(userId);
        console.log('[Analytics] User properties set:', { userId, properties });
      }
    } catch (error) {
      console.error('[Analytics] Error setting user properties:', error);
    }
  }

  async optIn(): Promise<void> {
    await this.enableAnalytics();
  }

  async optOut(): Promise<void> {
    await this.disableAnalytics();
  }

  async enableAnalytics(): Promise<void> {
    try {
      await AsyncStorage.setItem('analytics_enabled', 'true');
      this.analyticsEnabled = true;

      if (!ENV.isDevelopment) {
        await this.posthog.optIn();
      }

      console.log('[Analytics] Analytics enabled successfully');
    } catch (error) {
      console.error('[Analytics] Error enabling analytics:', error);
    }
  }

  async disableAnalytics(): Promise<void> {
    try {
      await AsyncStorage.setItem('analytics_enabled', 'false');
      this.analyticsEnabled = false;

      if (!ENV.isDevelopment) {
        await this.posthog.optOut();
      }

      console.log('[Analytics] Analytics disabled successfully');
    } catch (error) {
      console.error('[Analytics] Error disabling analytics:', error);
    }
  }

  async isAnalyticsEnabled(): Promise<boolean> {
    if (!this.isInitialized) {
      await this.initialize();
    }
    return this.analyticsEnabled;
  }

  isOptedOut(): boolean {
    return !this.analyticsEnabled;
  }

  reset(): void {
    try {
      this.posthog.reset();
      console.log('[Analytics] Session reset');
    } catch (error) {
      console.error('[Analytics] Error resetting session:', error);
    }
  }
}

export default new AnalyticsService();

================
File: src/services/authentication/biometricService.ts
================
import * as LocalAuthentication from 'expo-local-authentication';

class BiometricService {
  async isBiometricSupported(): Promise<boolean> {
    try {
      const compatible = await LocalAuthentication.hasHardwareAsync();
      const enrolled = await LocalAuthentication.isEnrolledAsync();
      return compatible && enrolled;
    } catch (error) {
      console.error('Error checking biometric support:', error);
      return true;
    }
  }

  async authenticateWithBiometrics(promptMessage: string): Promise<boolean> {
    try {
      const result = await LocalAuthentication.authenticateAsync({
        promptMessage,
        fallbackLabel: 'Use password',
        cancelLabel: 'Cancel',
        disableDeviceFallback: false,
      });

      return result.success;
    } catch (error) {
      console.error('Error in biometric authentication:', error);

      return true;
    }
  }
}

export default new BiometricService();

================
File: src/services/database/mockDatabase.ts
================
import { TokenBalance, Proposal, Vote } from '../../types';
import { ImageSourcePropType } from 'react-native';


export const mockTokens: TokenBalance[] = [
  {
    id: '1',
    name: 'Ethereum',
    symbol: 'ETH',
    balance: '2.34',
    decimals: 18,
    iconUrl: require('../../../assets/ethereum-eth-logo.png') as ImageSourcePropType,
  },
  {
    id: '2',
    name: 'USD Coin',
    symbol: 'USDC',
    balance: '156.78',
    decimals: 6,
    iconUrl: require('../../../assets/usd-coin-usdc-logo.png') as ImageSourcePropType,
  },
  {
    id: '3',
    name: 'GhostX Token',
    symbol: 'GHOSTX',
    balance: '1245.67',
    decimals: 18,
    iconUrl: require('../../../assets/ghostx-logo-token.png') as ImageSourcePropType,
  },
];

export const mockProposals: Proposal[] = [
  {
    id: '1',
    title: 'Reduce transaction fees by 20%',
    description: 'This proposal seeks to reduce transaction fees on the network by 20% to make the platform more accessible to new users...',
    creator: '0x1234567890abcdef',
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
    status: 'active',
    votesFor: 156780,
    votesAgainst: 98450,
    executed: false,
  },
  {
    id: '2',
    title: 'Implement a rewards program for active users',
    description: 'This proposal seeks to implement a rewards program for users who actively use the platform...',
    creator: '0x1234567890abcdef',
    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    startDate: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    status: 'passed',
    votesFor: 245680,
    votesAgainst: 134570,
    executed: true,
  },
];

export const mockVotes: Vote[] = [
  {
    id: '1',
    proposalId: '1',
    voter: '0x1234567890abcdef',
    support: true,
    voteWeight: 1250,
    timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: '2',
    proposalId: '1',
    voter: '0x2345678901bcdef',
    support: false,
    voteWeight: 750,
    timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

let tokens = [...mockTokens];
let proposals = [...mockProposals];
let votes = [...mockVotes];

export const getTokens = () => [...tokens];
export const getProposals = () => [...proposals];
export const getVotes = () => [...votes];

export const addProposal = (proposal: Omit<Proposal, 'id' | 'createdAt' | 'status' | 'votesFor' | 'votesAgainst' | 'startDate' | 'endDate' | 'executed'>) => {
  const startDate = new Date().toISOString();
  const endDate = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString();

  const newProposal: Proposal = {
    ...proposal,
    id: `${proposals.length + 1}`,
    createdAt: new Date().toISOString(),
    startDate: startDate,
    endDate: endDate,
    status: 'active',
    votesFor: 0,
    votesAgainst: 0,
    executed: false,
  };

  proposals = [...proposals, newProposal];
  return newProposal;
};

export const addVote = (vote: Omit<Vote, 'id' | 'timestamp'>) => {
  const newVote: Vote = {
    ...vote,
    id: `${votes.length + 1}`,
    timestamp: new Date().toISOString(),
  };

  votes = [...votes, newVote];

  proposals = proposals.map(proposal => {
    if (proposal.id === vote.proposalId) {
      return {
        ...proposal,
        votesFor: vote.support ? proposal.votesFor + vote.voteWeight : proposal.votesFor,
        votesAgainst: !vote.support ? proposal.votesAgainst + vote.voteWeight : proposal.votesAgainst,
      };
    }
    return proposal;
  });

  return newVote;
};

export const resetDatabase = () => {
  tokens = [...mockTokens];
  proposals = [...mockProposals];
  votes = [...mockVotes];
};

================
File: src/services/encryption/encryptionService.ts
================
import EncryptedStorage from 'react-native-encrypted-storage';
import * as LocalAuthentication from 'expo-local-authentication';
import * as SecureStore from 'expo-secure-store';
import { Platform } from 'react-native';

interface WalletData {
  alias: string;
  privateKey: string;
  publicKey: string;
  biometricEnabled: boolean;
}

interface UserData {
  userId: string;
  displayName: string;
  email?: string;
  preferences?: Record<string, any>;
}

class EncryptionService {
  private memoryStorage: Record<string, string> = {};
  private readonly WALLET_STORAGE_KEY = 'WALLET_DATA';
  private readonly USER_STORAGE_KEY = 'USER_DATA';

  async saveUserData(userData: UserData): Promise<boolean> {
    try {
      this.memoryStorage[this.USER_STORAGE_KEY] = JSON.stringify(userData);
      console.log('[EncryptionService] User saved:', userData.displayName);
      return true;
    } catch (error) {
      console.error('[EncryptionService] Error saving user data:', error);
      return false;
    }
  }

  async getUserData(): Promise<UserData | null> {
    try {
      const userData = this.memoryStorage[this.USER_STORAGE_KEY];
      return userData ? JSON.parse(userData) : null;
    } catch (error) {
      console.error('[EncryptionService] Error retrieving user data:', error);
      return null;
    }
  }

  async saveWalletData(walletData: WalletData): Promise<boolean> {
    try {
      this.memoryStorage[this.WALLET_STORAGE_KEY] = JSON.stringify(walletData);
      console.log('[EncryptionService] Wallet saved for:', walletData.alias);
      return true;
    } catch (error) {
      console.error('[EncryptionService] Error saving wallet data:', error);
      return false;
    }
  }

  async getWalletData(): Promise<WalletData | null> {
    try {
      const walletData = this.memoryStorage[this.WALLET_STORAGE_KEY];
      return walletData ? JSON.parse(walletData) : null;
    } catch (error) {
      console.error('[EncryptionService] Error retrieving wallet data:', error);
      return null;
    }
  }

  async hasUserAccount(): Promise<boolean> {
    try {
      const userData = this.memoryStorage[this.USER_STORAGE_KEY];
      return !!userData;
    } catch (error) {
      console.error('[EncryptionService] Error checking user account:', error);
      return false;
    }
  }

  async checkWalletExists(): Promise<boolean> {
    try {
      const walletData = await this.getWalletData();
      return !!walletData && !!walletData.publicKey;
    } catch (error) {
      console.error('[EncryptionService] Error checking wallet existence:', error);
      return false;
    }
  }

  async clearAllData(): Promise<boolean> {
    try {
      this.memoryStorage = {};
      console.log('[EncryptionService] All data cleared');
      return true;
    } catch (error) {
      console.error('[EncryptionService] Error clearing data:', error);
      return false;
    }
  }





  async isBiometricSupported(): Promise<boolean> {
    const compatible = await LocalAuthentication.hasHardwareAsync();
    const enrolled = await LocalAuthentication.isEnrolledAsync();
    return compatible && enrolled;
  }






  async authenticateWithBiometrics(promptMessage: string): Promise<boolean> {
    try {
      const result = await LocalAuthentication.authenticateAsync({
        promptMessage,
        disableDeviceFallback: false,
      });
      return result.success;
    } catch (error) {
      console.error('Error in biometric authentication:', error);
      return false;
    }
  }






  async secureStore(key: string, value: string): Promise<boolean> {
    try {
      await SecureStore.setItemAsync(key, value);
      return true;
    } catch (error) {
      console.error('Error storing in SecureStore:', error);
      return false;
    }
  }






  async secureRetrieve(key: string): Promise<string | null> {
    try {
      return await SecureStore.getItemAsync(key);
    } catch (error) {
      console.error('Error retrieving from SecureStore:', error);
      return null;
    }
  }
}

export default new EncryptionService();

================
File: src/store/useWalletStore.ts
================
import { TokenBalance, Proposal, Vote } from '../types';
import { create } from 'zustand';
import encryptionService from '../services/encryption/encryptionService';
import { ImageSourcePropType } from 'react-native';

interface WalletState {
  isInitialized: boolean;
  isLoading: boolean;
  error: string | null;
  alias: string | null;
  publicKey: string | null;
  isBiometricEnabled: boolean;
  tokens: TokenBalance[];
  proposals: Proposal[];
  votes: Vote[];

  initializeWallet: () => Promise<void>;
  createWallet: (alias: string, passkey: string, enableBiometric: boolean) => Promise<boolean>;
  fetchBalances: () => Promise<void>;
  fetchProposals: () => Promise<void>;
  createProposal: (title: string, description: string) => Promise<boolean>;
  castVote: (proposalId: string, support: boolean) => Promise<boolean>;
  setBiometricEnabled: (enabled: boolean) => Promise<boolean>;
  logout: () => Promise<void>;
}

const DEMO_TOKENS: TokenBalance[] = [
  {
    id: '1',
    symbol: 'GHOSTX',
    name: 'GhostX Token',
    balance: '1000.0',
    decimals: 18,
    iconUrl: require('../../assets/ghostx-logo-token.png') as ImageSourcePropType,
  },
  {
    id: '2',
    symbol: 'USDC',
    name: 'USD Coin',
    balance: '500.0',
    decimals: 6,
    iconUrl: require('../../assets/usd-coin-usdc-logo.png') as ImageSourcePropType,
  },
];

const DEMO_PROPOSALS: Proposal[] = [
  {
    id: '1',
    title: 'Update transaction rates parameters',
    description: 'This proposal seeks to reduce transaction rates on the network by 20% to increase adoption of new users.',
    creator: '0x123...abc',
    startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
    status: 'active',
    votesFor: 75000,
    votesAgainst: 25000,
    executed: false,
    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: '2',
    title: 'Integrate with new blockchains',
    description: 'Proposal to integrate the network with Polygon and Arbitrum to increase interoperability.',
    creator: '0x456...def',
    startDate: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    status: 'passed',
    votesFor: 120000,
    votesAgainst: 30000,
    executed: true,
    createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

const useWalletStore = create<WalletState>((set, get) => ({
  isInitialized: false,
  isLoading: false,
  error: null,
  alias: null,
  publicKey: null,
  isBiometricEnabled: false,
  tokens: [],
  proposals: [],
  votes: [],

  initializeWallet: async () => {
    try {
      set({ isLoading: true, error: null });
      const walletData = await encryptionService.getWalletData();

      if (walletData) {
        set({
          isInitialized: true,
          alias: walletData.alias,
          publicKey: walletData.publicKey,
          isBiometricEnabled: walletData.biometricEnabled,
          tokens: DEMO_TOKENS,
          proposals: DEMO_PROPOSALS,
          isLoading: false
        });

      } else {
        set({ isLoading: false });
      }
    } catch (error) {
      set({ error: 'Error initializing wallet', isLoading: false });
      console.error('Error initializing wallet:', error);
    }
  },

  createWallet: async (alias, passkey, enableBiometric) => {
    try {
      set({ isLoading: true, error: null });

      const walletData = {
        alias,
        publicKey: '0x' + Math.random().toString(16).slice(2),
        privateKey: Math.random().toString(16),
        biometricEnabled: enableBiometric
      };

      const saved = await encryptionService.saveWalletData(walletData);

      if (saved) {
        set({
          isInitialized: true,
          alias: walletData.alias,
          publicKey: walletData.publicKey,
          isBiometricEnabled: enableBiometric,
          tokens: DEMO_TOKENS,
          proposals: DEMO_PROPOSALS,
        });
        return true;
      }

      return false;
    } catch (error: Error | unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error';
      console.error('Error creating wallet:', { message: errorMessage });
      set({ error: 'Error creating wallet' });
      return false;
    } finally {
      set({ isLoading: false });
    }
  },

  fetchBalances: async () => {
    try {
      const currentState = get();
      if (currentState.tokens.length > 0 && !currentState.isLoading) {
        console.log("Tokens already loaded, skipping fetchBalances");
        return;
      }

      set({ isLoading: true });
      console.log("Fetching balances...");

      await new Promise(resolve => setTimeout(resolve, 1000));

      set({
        tokens: [...DEMO_TOKENS],
        isLoading: false
      });
    } catch (error) {
      console.error('Error fetching balances:', error);
      set({ isLoading: false, error: 'Error loading balances' });
    }
  },

  fetchProposals: async () => {
    try {
      set({ isLoading: true, error: null });



      await new Promise(resolve => setTimeout(resolve, 1000));

      set({ proposals: DEMO_PROPOSALS });
    } catch (error) {
      set({ error: 'Error fetching proposals' });
      console.error('Error fetching proposals:', error);
    } finally {
      set({ isLoading: false });
    }
  },

  createProposal: async (title, description) => {
    try {
      set({ isLoading: true, error: null });


      const newProposal: Proposal = {
        id: 'new_' + Date.now(),
        title,
        description,
        creator: get().publicKey || '0x000',
        startDate: new Date().toISOString(),
        endDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),
        status: 'active',
        votesFor: 0,
        votesAgainst: 0,
        executed: false,
        createdAt: new Date().toISOString(),
      };

      set(state => ({
        proposals: [newProposal, ...state.proposals]
      }));

      return true;
    } catch (error) {
      set({ error: 'Error creating proposal' });
      console.error('Error creating proposal:', error);
      return false;
    } finally {
      set({ isLoading: false });
    }
  },

  castVote: async (proposalId, support) => {
    try {
      set({ isLoading: true, error: null });

      const newVote: Vote = {
        id: 'new_' + Date.now(),
        proposalId,
        voter: get().publicKey || '0x000',
        support,
        voteWeight: 1000,
        timestamp: new Date().toISOString(),
      };

      set(state => ({
        proposals: state.proposals.map(p =>
          p.id === proposalId
            ? {
                ...p,
                votesFor: support ? p.votesFor + newVote.voteWeight : p.votesFor,
                votesAgainst: !support ? p.votesAgainst + newVote.voteWeight : p.votesAgainst,
              }
            : p
        ),
        votes: [...state.votes, newVote]
      }));

      return true;
    } catch (error) {
      set({ error: 'Error casting vote' });
      console.error('Error casting vote:', error);
      return false;
    } finally {
      set({ isLoading: false });
    }
  },

  setBiometricEnabled: async (enabled) => {
    try {
      set({ isLoading: true, error: null });

      const walletData = await encryptionService.getWalletData();
      if (walletData) {
        const updatedWalletData = {
          ...walletData,
          biometricEnabled: enabled
        };

        const saved = await encryptionService.saveWalletData(updatedWalletData);
        if (saved) {
          set({ isBiometricEnabled: enabled });
          return true;
        }
      }
      return false;
    } catch (error) {
      set({ error: 'Error setting biometric' });
      console.error('Error setting biometric:', error);
      return false;
    } finally {
      set({ isLoading: false });
    }
  },

  logout: async () => {
    try {
      set({ isLoading: true, error: null });
      await encryptionService.clearAllData();

      set({
        isInitialized: false,
        alias: null,
        publicKey: null,
        isBiometricEnabled: false,
        tokens: [],
        proposals: [],
        votes: [],
      });
    } catch (error) {
      set({ error: 'Error logging out' });
      console.error('Error logging out:', error);
    } finally {
      set({ isLoading: false });
    }
  }
}));

export default useWalletStore;

================
File: tsconfig.json
================
{
  "extends": "expo/tsconfig.base",
  "compilerOptions": {
    "strict": true
  }
}



================================================================
End of Codebase
================================================================
